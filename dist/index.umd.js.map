{"version":3,"file":"index.umd.js","sources":["../node_modules/recordrtc/RecordRTC.js","../node_modules/array-find/find.js","../node_modules/lodash.findindex/index.js","../src/screencapture.js","../src/pick.js","../src/ipcMainHandler.js","../src/index.js"],"sourcesContent":["'use strict';\r\n\r\n// Last time updated: 2017-12-13 5:07:29 AM UTC\r\n\r\n// ________________\r\n// RecordRTC v5.4.6\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/RecordRTC\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\n// ____________\r\n// RecordRTC.js\r\n\r\n/**\r\n * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. \r\n * @summary Record audio, video or screen inside the browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\r\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTC\r\n * @class\r\n * @example\r\n * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {\r\n *     type: 'video', // audio or video or gif or canvas\r\n *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc\r\n * });\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction RecordRTC(mediaStream, config) {\r\n    if (!mediaStream) {\r\n        throw 'First parameter is required.';\r\n    }\r\n\r\n    config = config || {\r\n        type: 'video'\r\n    };\r\n\r\n    config = new RecordRTCConfiguration(mediaStream, config);\r\n\r\n    // a reference to user's recordRTC object\r\n    var self = this;\r\n\r\n    function startRecording(config2) {\r\n        if (!!config2) {\r\n            // allow users to set options using startRecording method\r\n            // config2 is similar to main \"config\" object (second parameter over RecordRTC constructor)\r\n            config = new RecordRTCConfiguration(mediaStream, config2);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('started recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder.record();\r\n\r\n            setState('recording');\r\n\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n            return self;\r\n        }\r\n\r\n        initRecorder(function() {\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    function initRecorder(initCallback) {\r\n        if (initCallback) {\r\n            config.initCallback = function() {\r\n                initCallback();\r\n                initCallback = config.initCallback = null; // recorder.initRecorder should be call-backed once.\r\n            };\r\n        }\r\n\r\n        var Recorder = new GetRecorderType(mediaStream, config);\r\n\r\n        mediaRecorder = new Recorder(mediaStream, config);\r\n        mediaRecorder.record();\r\n\r\n        setState('recording');\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Initialized recorderType:', mediaRecorder.constructor.name, 'for output-type:', config.type);\r\n        }\r\n    }\r\n\r\n    function stopRecording(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'paused') {\r\n            self.resumeRecording();\r\n\r\n            setTimeout(function() {\r\n                stopRecording(callback);\r\n            }, 1);\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording' && !config.disableLogs) {\r\n            console.warn('Recording state should be: \"recording\", however current state is: ', self.state);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Stopped recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (config.type !== 'gif') {\r\n            mediaRecorder.stop(_callback);\r\n        } else {\r\n            mediaRecorder.stop();\r\n            _callback();\r\n        }\r\n\r\n        setState('stopped');\r\n\r\n        function _callback(__blob) {\r\n            if (!mediaRecorder) {\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, '');\r\n                } else {\r\n                    callback('');\r\n                }\r\n                return;\r\n            }\r\n\r\n            Object.keys(mediaRecorder).forEach(function(key) {\r\n                if (typeof mediaRecorder[key] === 'function') {\r\n                    return;\r\n                }\r\n\r\n                self[key] = mediaRecorder[key];\r\n            });\r\n\r\n            var blob = mediaRecorder.blob;\r\n\r\n            if (!blob) {\r\n                if (__blob) {\r\n                    mediaRecorder.blob = blob = __blob;\r\n                } else {\r\n                    throw 'Recording failed.';\r\n                }\r\n            }\r\n\r\n            if (blob && !config.disableLogs) {\r\n                console.log(blob.type, '->', bytesToSize(blob.size));\r\n            }\r\n\r\n            if (callback) {\r\n                var url = URL.createObjectURL(blob);\r\n\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, url);\r\n                } else {\r\n                    callback(url);\r\n                }\r\n            }\r\n\r\n            if (!config.autoWriteToDisk) {\r\n                return;\r\n            }\r\n\r\n            getDataURL(function(dataURL) {\r\n                var parameter = {};\r\n                parameter[config.type + 'Blob'] = dataURL;\r\n                DiskStorage.Store(parameter);\r\n            });\r\n        }\r\n    }\r\n\r\n    function pauseRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to pause the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('paused');\r\n\r\n        mediaRecorder.pause();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Paused recording.');\r\n        }\r\n    }\r\n\r\n    function resumeRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'paused') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to resume the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('recording');\r\n\r\n        // not all libs have this method yet\r\n        mediaRecorder.resume();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Resumed recording.');\r\n        }\r\n    }\r\n\r\n    function readFile(_blob) {\r\n        postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n    }\r\n\r\n    function getDataURL(callback, _mediaRecorder) {\r\n        if (!callback) {\r\n            throw 'Pass a callback function over getDataURL.';\r\n        }\r\n\r\n        var blob = _mediaRecorder ? _mediaRecorder.blob : (mediaRecorder || {}).blob;\r\n\r\n        if (!blob) {\r\n            if (!config.disableLogs) {\r\n                console.warn('Blob encoder did not finish its job yet.');\r\n            }\r\n\r\n            setTimeout(function() {\r\n                getDataURL(callback, _mediaRecorder);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (typeof Worker !== 'undefined' && !navigator.mozGetUserMedia) {\r\n            var webWorker = processInWebWorker(readFile);\r\n\r\n            webWorker.onmessage = function(event) {\r\n                callback(event.data);\r\n            };\r\n\r\n            webWorker.postMessage(blob);\r\n        } else {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onload = function(event) {\r\n                callback(event.target.result);\r\n            };\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                'this.onmessage =  function (e) {' + _function.name + '(e.data);}'\r\n            ], {\r\n                type: 'application/javascript'\r\n            }));\r\n\r\n            var worker = new Worker(blob);\r\n            URL.revokeObjectURL(blob);\r\n            return worker;\r\n        }\r\n    }\r\n\r\n    function handleRecordingDuration(counter) {\r\n        counter = counter || 0;\r\n\r\n        if (self.state === 'paused') {\r\n            setTimeout(function() {\r\n                handleRecordingDuration(counter);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'stopped') {\r\n            return;\r\n        }\r\n\r\n        if (counter >= self.recordingDuration) {\r\n            stopRecording(self.onRecordingStopped);\r\n            return;\r\n        }\r\n\r\n        counter += 1000; // 1-second\r\n\r\n        setTimeout(function() {\r\n            handleRecordingDuration(counter);\r\n        }, 1000);\r\n    }\r\n\r\n    function setState(state) {\r\n        if (!self) {\r\n            return;\r\n        }\r\n\r\n        self.state = state;\r\n\r\n        if (typeof self.onStateChanged.call === 'function') {\r\n            self.onStateChanged.call(self, state);\r\n        } else {\r\n            self.onStateChanged(state);\r\n        }\r\n    }\r\n\r\n    var WARNING = 'It seems that recorder is destroyed or \"startRecording\" is not invoked for ' + config.type + ' recorder.';\r\n\r\n    function warningLog() {\r\n        if (config.disableLogs === true) {\r\n            return;\r\n        }\r\n\r\n        console.warn(WARNING);\r\n    }\r\n\r\n    var mediaRecorder;\r\n\r\n    var returnObject = {\r\n        /**\r\n         * This method starts the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var recorder = RecordRTC(mediaStream, {\r\n         *     type: 'video'\r\n         * });\r\n         * recorder.startRecording();\r\n         */\r\n        startRecording: startRecording,\r\n\r\n        /**\r\n         * This method stops the recording. It is strongly recommended to get \"blob\" or \"URI\" inside the callback to make sure all recorders finished their job.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     // use either \"this\" or \"recorder\" object; both are identical\r\n         *     video.src = this.toURL();\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        stopRecording: stopRecording,\r\n\r\n        /**\r\n         * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Firefox is unable to pause the recording. Fix it.\r\n         * @example\r\n         * recorder.pauseRecording();  // pause the recording\r\n         * recorder.resumeRecording(); // resume again\r\n         */\r\n        pauseRecording: pauseRecording,\r\n\r\n        /**\r\n         * This method resumes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.pauseRecording();  // first of all, pause the recording\r\n         * recorder.resumeRecording(); // now resume it\r\n         */\r\n        resumeRecording: resumeRecording,\r\n\r\n        /**\r\n         * This method initializes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * recorder.initRecorder();\r\n         */\r\n        initRecorder: initRecorder,\r\n\r\n        /**\r\n         * Ask RecordRTC to auto-stop the recording after 5 minutes.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var fiveMinutes = 5 * 1000 * 60;\r\n         * recorder.setRecordingDuration(fiveMinutes, function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         * \r\n         * // or otherwise\r\n         * recorder.setRecordingDuration(fiveMinutes).onRecordingStopped(function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         */\r\n        setRecordingDuration: function(recordingDuration, callback) {\r\n            if (typeof recordingDuration === 'undefined') {\r\n                throw 'recordingDuration is required.';\r\n            }\r\n\r\n            if (typeof recordingDuration !== 'number') {\r\n                throw 'recordingDuration must be a number.';\r\n            }\r\n\r\n            self.recordingDuration = recordingDuration;\r\n            self.onRecordingStopped = callback || function() {};\r\n\r\n            return {\r\n                onRecordingStopped: function(callback) {\r\n                    self.onRecordingStopped = callback;\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * This method can be used to clear/reset all the recorded data.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Figure out the difference between \"reset\" and \"clearRecordedData\" methods.\r\n         * @example\r\n         * recorder.clearRecordedData();\r\n         */\r\n        clearRecordedData: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            mediaRecorder.clearRecordedData();\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('Cleared old recorded data.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the recorded blob. Use this method inside the \"stopRecording\" callback.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.getBlob();\r\n         *\r\n         *     var file = new File([blob], 'filename.webm', {\r\n         *         type: 'video/webm'\r\n         *     });\r\n         *\r\n         *     var formData = new FormData();\r\n         *     formData.append('file', file); // upload \"File\" object rather than a \"Blob\"\r\n         *     uploadToServer(formData);\r\n         * });\r\n         * @returns {Blob} Returns recorded data as \"Blob\" object.\r\n         */\r\n        getBlob: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return mediaRecorder.blob;\r\n        },\r\n\r\n        /**\r\n         * Get data-URI instead of Blob.\r\n         * @param {function} callback - Callback to get the Data-URI.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     recorder.getDataURL(function(dataURI) {\r\n         *         video.src = dataURI;\r\n         *     });\r\n         * });\r\n         */\r\n        getDataURL: getDataURL,\r\n\r\n        /**\r\n         * Get virtual/temporary URL. Usage of this URL is limited to current tab.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     video.src = this.toURL();\r\n         * });\r\n         * @returns {String} Returns a virtual/temporary URL for the recorded \"Blob\".\r\n         */\r\n        toURL: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return URL.createObjectURL(mediaRecorder.blob);\r\n        },\r\n\r\n        /**\r\n         * Get internal recording object (i.e. internal module) e.g. MutliStreamRecorder, MediaStreamRecorder, StereoAudioRecorder or WhammyRecorder etc.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var internal = recorder.getInternalRecorder();\r\n         * if(internal instanceof MultiStreamRecorder) {\r\n         *     internal.addStreams([newAudioStream]);\r\n         *     internal.resetVideoStreams([screenStream]);\r\n         * }\r\n         * @returns {Object} Returns internal recording object.\r\n         */\r\n        getInternalRecorder: function() {\r\n            return mediaRecorder;\r\n        },\r\n\r\n        /**\r\n         * Invoke save-as dialog to save the recorded blob into your disk.\r\n         * @param {string} fileName - Set your own file name.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     this.save('file-name');\r\n         *\r\n         *     // or manually:\r\n         *     invokeSaveAsDialog(this.getBlob(), 'filename.webm');\r\n         * });\r\n         */\r\n        save: function(fileName) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            invokeSaveAsDialog(mediaRecorder.blob, fileName);\r\n        },\r\n\r\n        /**\r\n         * This method gets a blob from indexed-DB storage.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.getFromDisk(function(dataURL) {\r\n         *     video.src = dataURL;\r\n         * });\r\n         */\r\n        getFromDisk: function(callback) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            RecordRTC.getFromDisk(config.type, callback);\r\n        },\r\n\r\n        /**\r\n         * This method appends an array of webp images to the recorded video-blob. It takes an \"array\" object.\r\n         * @type {Array.<Array>}\r\n         * @param {Array} arrayOfWebPImages - Array of webp images.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * var arrayOfWebPImages = [];\r\n         * arrayOfWebPImages.push({\r\n         *     duration: index,\r\n         *     image: 'data:image/webp;base64,...'\r\n         * });\r\n         * recorder.setAdvertisementArray(arrayOfWebPImages);\r\n         */\r\n        setAdvertisementArray: function(arrayOfWebPImages) {\r\n            config.advertisement = [];\r\n\r\n            var length = arrayOfWebPImages.length;\r\n            for (var i = 0; i < length; i++) {\r\n                config.advertisement.push({\r\n                    duration: i,\r\n                    image: arrayOfWebPImages[i]\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * It is equivalent to <code class=\"str\">\"recorder.getBlob()\"</code> method. Usage of \"getBlob\" is recommended, though.\r\n         * @property {Blob} blob - Recorded Blob can be accessed using this property.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.blob;\r\n         *\r\n         *     // below one is recommended\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        blob: null,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} bufferSize - Buffer-size used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used this buffer-size: ' + this.bufferSize);\r\n         * });\r\n         */\r\n        bufferSize: 0,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} sampleRate - Sample-rates used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used these sample-rates: ' + this.sampleRate);\r\n         * });\r\n         */\r\n        sampleRate: 0,\r\n\r\n        /**\r\n         * {recorderType:StereoAudioRecorder} returns ArrayBuffer object.\r\n         * @property {ArrayBuffer} buffer - Audio ArrayBuffer, supported only in Chrome.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var arrayBuffer = this.buffer;\r\n         *     alert(arrayBuffer.byteLength);\r\n         * });\r\n         */\r\n        buffer: null,\r\n\r\n        /**\r\n         * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.reset();\r\n         * recorder.startRecording();\r\n         */\r\n        reset: function() {\r\n            if (mediaRecorder && typeof mediaRecorder.clearRecordedData === 'function') {\r\n                mediaRecorder.clearRecordedData();\r\n            }\r\n            mediaRecorder = null;\r\n            setState('inactive');\r\n            self.blob = null;\r\n        },\r\n\r\n        /**\r\n         * This method is called whenever recorder's state changes. Use this as an \"event\".\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.onStateChanged = function(state) {\r\n         *     console.log('Recorder state: ', state);\r\n         * };\r\n         */\r\n        onStateChanged: function(state) {\r\n            if (!config.disableLogs) {\r\n                console.log('Recorder state changed:', state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * A recorder can have inactive, recording, paused or stopped states.\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * // this looper function will keep you updated about the recorder's states.\r\n         * (function looper() {\r\n         *     document.querySelector('h1').innerHTML = 'Recorder's state is: ' + recorder.state;\r\n         *     if(recorder.state === 'stopped') return; // ignore+stop\r\n         *     setTimeout(looper, 1000); // update after every 3-seconds\r\n         * })();\r\n         * recorder.startRecording();\r\n         */\r\n        state: 'inactive',\r\n\r\n        /**\r\n         * Get recorder's readonly state.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * var state = recorder.getState();\r\n         * @returns {String} Returns recording state.\r\n         */\r\n        getState: function() {\r\n            return self.state;\r\n        },\r\n\r\n        /**\r\n         * Destroy RecordRTC instance. Clear all recorders and objects.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * recorder.destroy();\r\n         */\r\n        destroy: function() {\r\n            var disableLogs = config.disableLogs;\r\n\r\n            config.disableLogs = true;\r\n            self.reset();\r\n            config = {};\r\n            setState('destroyed');\r\n            returnObject = self = null;\r\n\r\n            if (Storage.AudioContextConstructor) {\r\n                Storage.AudioContextConstructor.close();\r\n                Storage.AudioContextConstructor = null;\r\n            }\r\n\r\n            if (!disableLogs) {\r\n                console.warn('RecordRTC is destroyed.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * RecordRTC version number\r\n         * @property {String} version - Release version number.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * alert(recorder.version);\r\n         */\r\n        version: '5.4.6'\r\n    };\r\n\r\n    if (!this) {\r\n        self = returnObject;\r\n        return returnObject;\r\n    }\r\n\r\n    // if someone wants to use RecordRTC with the \"new\" keyword.\r\n    for (var prop in returnObject) {\r\n        this[prop] = returnObject[prop];\r\n    }\r\n\r\n    self = this;\r\n\r\n    return returnObject;\r\n}\r\n\r\nRecordRTC.version = '5.4.6';\r\n\r\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n    module.exports = RecordRTC;\r\n}\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define('RecordRTC', [], function() {\r\n        return RecordRTC;\r\n    });\r\n}\n\r\nRecordRTC.getFromDisk = function(type, callback) {\r\n    if (!callback) {\r\n        throw 'callback is mandatory.';\r\n    }\r\n\r\n    console.log('Getting recorded ' + (type === 'all' ? 'blobs' : type + ' blob ') + ' from disk!');\r\n    DiskStorage.Fetch(function(dataURL, _type) {\r\n        if (type !== 'all' && _type === type + 'Blob' && callback) {\r\n            callback(dataURL);\r\n        }\r\n\r\n        if (type === 'all' && callback) {\r\n            callback(dataURL, _type.replace('Blob', ''));\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof RecordRTC\r\n * @example\r\n * RecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nRecordRTC.writeToDisk = function(options) {\r\n    console.log('Writing recorded blob(s) to disk!');\r\n    options = options || {};\r\n    if (options.audio && options.video && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                options.gif.getDataURL(function(gifDataURL) {\r\n                    DiskStorage.Store({\r\n                        audioBlob: audioDataURL,\r\n                        videoBlob: videoDataURL,\r\n                        gifBlob: gifDataURL\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.video) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    videoBlob: videoDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.video && options.gif) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    videoBlob: videoDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            DiskStorage.Store({\r\n                audioBlob: audioDataURL\r\n            });\r\n        });\r\n    } else if (options.video) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            DiskStorage.Store({\r\n                videoBlob: videoDataURL\r\n            });\r\n        });\r\n    } else if (options.gif) {\r\n        options.gif.getDataURL(function(gifDataURL) {\r\n            DiskStorage.Store({\r\n                gifBlob: gifDataURL\r\n            });\r\n        });\r\n    }\r\n};\n\r\n// __________________________\r\n// RecordRTC-Configuration.js\r\n\r\n/**\r\n * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\r\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCConfiguration\r\n * @class\r\n * @example\r\n * var options = RecordRTCConfiguration(mediaStream, options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\r\n */\r\n\r\nfunction RecordRTCConfiguration(mediaStream, config) {\r\n    if (!config.recorderType && !config.type) {\r\n        if (!!config.audio && !!config.video) {\r\n            config.type = 'video';\r\n        } else if (!!config.audio && !config.video) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    if (config.recorderType && !config.type) {\r\n        if (config.recorderType === WhammyRecorder || config.recorderType === CanvasRecorder) {\r\n            config.type = 'video';\r\n        } else if (config.recorderType === GifRecorder) {\r\n            config.type = 'gif';\r\n        } else if (config.recorderType === StereoAudioRecorder) {\r\n            config.type = 'audio';\r\n        } else if (config.recorderType === MediaStreamRecorder) {\r\n            if (mediaStream.getAudioTracks().length && mediaStream.getVideoTracks().length) {\r\n                config.type = 'video';\r\n            } else if (mediaStream.getAudioTracks().length && !mediaStream.getVideoTracks().length) {\r\n                config.type = 'audio';\r\n            } else if (!mediaStream.getAudioTracks().length && mediaStream.getVideoTracks().length) {\r\n                config.type = 'audio';\r\n            } else {\r\n                // config.type = 'UnKnown';\r\n            }\r\n        }\r\n    }\r\n\r\n    if (typeof MediaStreamRecorder !== 'undefined' && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (!config.mimeType) {\r\n            config.mimeType = 'video/webm';\r\n        }\r\n\r\n        if (!config.type) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n\r\n        if (!config.bitsPerSecond) {\r\n            // config.bitsPerSecond = 128000;\r\n        }\r\n    }\r\n\r\n    // consider default type=audio\r\n    if (!config.type) {\r\n        if (config.mimeType) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n        if (!config.type) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    return config;\r\n}\n\r\n// __________________\r\n// GetRecorderType.js\r\n\r\n/**\r\n * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It returns best recorder-type available for your browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\r\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\r\n * @typedef GetRecorderType\r\n * @class\r\n * @example\r\n * var RecorderType = GetRecorderType(options);\r\n * var recorder = new RecorderType(options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction GetRecorderType(mediaStream, config) {\r\n    var recorder;\r\n\r\n    // StereoAudioRecorder can work with all three: Edge, Firefox and Chrome\r\n    // todo: detect if it is Edge, then auto use: StereoAudioRecorder\r\n    if (isChrome || isEdge || isOpera) {\r\n        // Media Stream Recording API has not been implemented in chrome yet;\r\n        // That's why using WebAudio API to record stereo audio in WAV format\r\n        recorder = StereoAudioRecorder;\r\n    }\r\n\r\n    if (typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype && !isChrome) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    // video recorder (in WebM format)\r\n    if (config.type === 'video' && (isChrome || isOpera)) {\r\n        recorder = WhammyRecorder;\r\n    }\r\n\r\n    // video recorder (in Gif format)\r\n    if (config.type === 'gif') {\r\n        recorder = GifRecorder;\r\n    }\r\n\r\n    // html2canvas recording!\r\n    if (config.type === 'canvas') {\r\n        recorder = CanvasRecorder;\r\n    }\r\n\r\n    if (isMediaRecorderCompatible() && recorder !== CanvasRecorder && recorder !== GifRecorder && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if ((mediaStream.getVideoTracks && mediaStream.getVideoTracks().length) || (mediaStream.getAudioTracks && mediaStream.getAudioTracks().length)) {\r\n            // audio-only recording\r\n            if (config.type === 'audio') {\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('audio/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n                // else recorder = StereoAudioRecorder;\r\n            } else {\r\n                // video or screen tracks\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('video/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (config.recorderType) {\r\n        recorder = config.recorderType;\r\n    }\r\n\r\n    if (mediaStream instanceof Array && mediaStream.length) {\r\n        recorder = MultiStreamRecorder;\r\n    }\r\n\r\n    if (!config.disableLogs && !!recorder && !!recorder.name) {\r\n        console.log('Using recorderType:', recorder.name || recorder.constructor.name);\r\n    }\r\n\r\n    return recorder;\r\n}\n\r\n// _____________\r\n// MRecordRTC.js\r\n\r\n/**\r\n * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\r\n * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\r\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\r\n * @typedef MRecordRTC\r\n * @class\r\n * @example\r\n * var recorder = new MRecordRTC();\r\n * recorder.addStream(MediaStream);\r\n * recorder.mediaType = {\r\n *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\r\n *     video: true, // or WhammyRecorder or MediaStreamRecorder\r\n *     gif: true    // or GifRecorder\r\n * };\r\n * // mimeType is optional and should be set only in advance cases.\r\n * recorder.mimeType = {\r\n *     audio: 'audio/wav',\r\n *     video: 'video/webm',\r\n *     gif:   'image/gif'\r\n * };\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction MRecordRTC(mediaStream) {\r\n\r\n    /**\r\n     * This method attaches MediaStream object to {@link MRecordRTC}.\r\n     * @param {MediaStream} mediaStream - A MediaStream object, either fetched using getUserMedia API, or generated using captureStreamUntilEnded or WebAudio API.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.addStream(MediaStream);\r\n     */\r\n    this.addStream = function(_mediaStream) {\r\n        if (_mediaStream) {\r\n            mediaStream = _mediaStream;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This property can be used to set the recording type e.g. audio, or video, or gif, or canvas.\r\n     * @property {object} mediaType - {audio: true, video: true, gif: true}\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * var recorder = new MRecordRTC();\r\n     * recorder.mediaType = {\r\n     *     audio: true, // TRUE or StereoAudioRecorder or MediaStreamRecorder\r\n     *     video: true, // TRUE or WhammyRecorder or MediaStreamRecorder\r\n     *     gif  : true  // TRUE or GifRecorder\r\n     * };\r\n     */\r\n    this.mediaType = {\r\n        audio: true,\r\n        video: true\r\n    };\r\n\r\n    /**\r\n     * This method starts recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.startRecording();\r\n     */\r\n    this.startRecording = function() {\r\n        var mediaType = this.mediaType;\r\n        var recorderType;\r\n        var mimeType = this.mimeType || {\r\n            audio: null,\r\n            video: null,\r\n            gif: null\r\n        };\r\n\r\n        if (typeof mediaType.audio !== 'function' && isMediaRecorderCompatible() && mediaStream.getAudioTracks && !mediaStream.getAudioTracks().length) {\r\n            mediaType.audio = false;\r\n        }\r\n\r\n        if (typeof mediaType.video !== 'function' && isMediaRecorderCompatible() && mediaStream.getVideoTracks && !mediaStream.getVideoTracks().length) {\r\n            mediaType.video = false;\r\n        }\r\n\r\n        if (typeof mediaType.gif !== 'function' && isMediaRecorderCompatible() && mediaStream.getVideoTracks && !mediaStream.getVideoTracks().length) {\r\n            mediaType.gif = false;\r\n        }\r\n\r\n        if (!mediaType.audio && !mediaType.video && !mediaType.gif) {\r\n            throw 'MediaStream must have either audio or video tracks.';\r\n        }\r\n\r\n        if (!!mediaType.audio) {\r\n            recorderType = null;\r\n            if (typeof mediaType.audio === 'function') {\r\n                recorderType = mediaType.audio;\r\n            }\r\n\r\n            this.audioRecorder = new RecordRTC(mediaStream, {\r\n                type: 'audio',\r\n                bufferSize: this.bufferSize,\r\n                sampleRate: this.sampleRate,\r\n                numberOfAudioChannels: this.numberOfAudioChannels || 2,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.audio,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp\r\n            });\r\n\r\n            if (!mediaType.video) {\r\n                this.audioRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.video) {\r\n            recorderType = null;\r\n            if (typeof mediaType.video === 'function') {\r\n                recorderType = mediaType.video;\r\n            }\r\n\r\n            var newStream = mediaStream;\r\n\r\n            if (isMediaRecorderCompatible() && !!mediaType.audio && typeof mediaType.audio === 'function') {\r\n                var videoTrack = mediaStream.getVideoTracks()[0];\r\n\r\n                if (!!navigator.mozGetUserMedia) {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n\r\n                    if (recorderType && recorderType === WhammyRecorder) {\r\n                        // Firefox does NOT support webp-encoding yet\r\n                        recorderType = MediaStreamRecorder;\r\n                    }\r\n                } else {\r\n                    newStream = new MediaStream([videoTrack]);\r\n                }\r\n            }\r\n\r\n            this.videoRecorder = new RecordRTC(newStream, {\r\n                type: 'video',\r\n                video: this.video,\r\n                canvas: this.canvas,\r\n                frameInterval: this.frameInterval || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.video,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp\r\n            });\r\n\r\n            if (!mediaType.audio) {\r\n                this.videoRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.audio && !!mediaType.video) {\r\n            var self = this;\r\n\r\n            // this line prevents StereoAudioRecorder\r\n            // todo: fix it\r\n            if (isMediaRecorderCompatible() /* && !this.audioRecorder */ ) {\r\n                self.audioRecorder = null;\r\n                self.videoRecorder.startRecording();\r\n            } else {\r\n                self.videoRecorder.initRecorder(function() {\r\n                    self.audioRecorder.initRecorder(function() {\r\n                        // Both recorders are ready to record things accurately\r\n                        self.videoRecorder.startRecording();\r\n                        self.audioRecorder.startRecording();\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.gif) {\r\n            recorderType = null;\r\n            if (typeof mediaType.gif === 'function') {\r\n                recorderType = mediaType.gif;\r\n            }\r\n            this.gifRecorder = new RecordRTC(mediaStream, {\r\n                type: 'gif',\r\n                frameRate: this.frameRate || 200,\r\n                quality: this.quality || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.gif\r\n            });\r\n            this.gifRecorder.startRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording.\r\n     * @param {function} callback - Callback function is invoked when all encoders finished their jobs.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.stopRecording(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     */\r\n    this.stopRecording = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'audio');\r\n            });\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'video');\r\n            });\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'gif');\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.pauseRecording();\r\n     */\r\n    this.pauseRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.pauseRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.resumeRecording();\r\n     */\r\n    this.resumeRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.resumeRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs.\r\n     * @param {function} callback - All recorded blobs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getBlob(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     * // or\r\n     * var audioBlob = recorder.getBlob().audio;\r\n     * var videoBlob = recorder.getBlob().video;\r\n     */\r\n    this.getBlob = function(callback) {\r\n        var output = {};\r\n\r\n        if (this.audioRecorder) {\r\n            output.audio = this.audioRecorder.getBlob();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            output.video = this.videoRecorder.getBlob();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            output.gif = this.gifRecorder.getBlob();\r\n        }\r\n\r\n        if (callback) {\r\n            callback(output);\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Destroy all recorder instances.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.destroy();\r\n     */\r\n    this.destroy = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.destroy();\r\n            this.audioRecorder = null;\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.destroy();\r\n            this.videoRecorder = null;\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.destroy();\r\n            this.gifRecorder = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs' DataURLs.\r\n     * @param {function} callback - All recorded blobs' DataURLs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getDataURL(function(recording){\r\n     *     var audioDataURL = recording.audio;\r\n     *     var videoDataURL = recording.video;\r\n     *     var gifDataURL   = recording.gif;\r\n     * });\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        this.getBlob(function(blob) {\r\n            if (blob.audio && blob.video) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    getDataURL(blob.video, function(_videoDataURL) {\r\n                        callback({\r\n                            audio: _audioDataURL,\r\n                            video: _videoDataURL\r\n                        });\r\n                    });\r\n                });\r\n            } else if (blob.audio) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    callback({\r\n                        audio: _audioDataURL\r\n                    });\r\n                });\r\n            } else if (blob.video) {\r\n                getDataURL(blob.video, function(_videoDataURL) {\r\n                    callback({\r\n                        video: _videoDataURL\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n        function getDataURL(blob, callback00) {\r\n            if (typeof Worker !== 'undefined') {\r\n                var webWorker = processInWebWorker(function readFile(_blob) {\r\n                    postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n                });\r\n\r\n                webWorker.onmessage = function(event) {\r\n                    callback00(event.data);\r\n                };\r\n\r\n                webWorker.postMessage(blob);\r\n            } else {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                reader.onload = function(event) {\r\n                    callback00(event.target.result);\r\n                };\r\n            }\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                'this.onmessage =  function (e) {' + _function.name + '(e.data);}'\r\n            ], {\r\n                type: 'application/javascript'\r\n            }));\r\n\r\n            var worker = new Worker(blob);\r\n            var url;\r\n            if (typeof URL !== 'undefined') {\r\n                url = URL;\r\n            } else if (typeof webkitURL !== 'undefined') {\r\n                url = webkitURL;\r\n            } else {\r\n                throw 'Neither URL nor webkitURL detected.';\r\n            }\r\n            url.revokeObjectURL(blob);\r\n            return worker;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to ask {@link MRecordRTC} to write all recorded blobs into IndexedDB storage.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.writeToDisk();\r\n     */\r\n    this.writeToDisk = function() {\r\n        RecordRTC.writeToDisk({\r\n            audio: this.audioRecorder,\r\n            video: this.videoRecorder,\r\n            gif: this.gifRecorder\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method can be used to invoke a save-as dialog for all recorded blobs.\r\n     * @param {object} args - {audio: 'audio-name', video: 'video-name', gif: 'gif-name'}\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.save({\r\n     *     audio: 'audio-file-name',\r\n     *     video: 'video-file-name',\r\n     *     gif  : 'gif-file-name'\r\n     * });\r\n     */\r\n    this.save = function(args) {\r\n        args = args || {\r\n            audio: true,\r\n            video: true,\r\n            gif: true\r\n        };\r\n\r\n        if (!!args.audio && this.audioRecorder) {\r\n            this.audioRecorder.save(typeof args.audio === 'string' ? args.audio : '');\r\n        }\r\n\r\n        if (!!args.video && this.videoRecorder) {\r\n            this.videoRecorder.save(typeof args.video === 'string' ? args.video : '');\r\n        }\r\n        if (!!args.gif && this.gifRecorder) {\r\n            this.gifRecorder.save(typeof args.gif === 'string' ? args.gif : '');\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * This method can be used to get all recorded blobs from IndexedDB storage.\r\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\r\n * @param {function} callback - Callback function to get all stored blobs.\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.getFromDisk('all', function(dataURL, type){\r\n *     if(type === 'audio') { }\r\n *     if(type === 'video') { }\r\n *     if(type === 'gif')   { }\r\n * });\r\n */\r\nMRecordRTC.getFromDisk = RecordRTC.getFromDisk;\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nMRecordRTC.writeToDisk = RecordRTC.writeToDisk;\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MRecordRTC = MRecordRTC;\r\n}\n\r\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n(function(that) {\r\n    if (!that) {\r\n        return;\r\n    }\r\n\r\n    if (typeof window !== 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof global === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    global.navigator = {\r\n        userAgent: browserFakeUserAgent,\r\n        getUserMedia: function() {}\r\n    };\r\n\r\n    if (!global.console) {\r\n        global.console = {};\r\n    }\r\n\r\n    if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n        global.console.error = global.console.log = global.console.log || function() {\r\n            console.log(arguments);\r\n        };\r\n    }\r\n\r\n    if (typeof document === 'undefined') {\r\n        /*global document:true */\r\n        that.document = {};\r\n\r\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n            var obj = {\r\n                getContext: function() {\r\n                    return obj;\r\n                },\r\n                play: function() {},\r\n                pause: function() {},\r\n                drawImage: function() {},\r\n                toDataURL: function() {\r\n                    return '';\r\n                }\r\n            };\r\n            return obj;\r\n        };\r\n\r\n        that.HTMLVideoElement = function() {};\r\n    }\r\n\r\n    if (typeof location === 'undefined') {\r\n        /*global location:true */\r\n        that.location = {\r\n            protocol: 'file:',\r\n            href: '',\r\n            hash: ''\r\n        };\r\n    }\r\n\r\n    if (typeof screen === 'undefined') {\r\n        /*global screen:true */\r\n        that.screen = {\r\n            width: 0,\r\n            height: 0\r\n        };\r\n    }\r\n\r\n    if (typeof URL === 'undefined') {\r\n        /*global screen:true */\r\n        that.URL = {\r\n            createObjectURL: function() {\r\n                return '';\r\n            },\r\n            revokeObjectURL: function() {\r\n                return '';\r\n            }\r\n        };\r\n    }\r\n\r\n    /*global window:true */\r\n    that.window = global;\r\n})(typeof global !== 'undefined' ? global : null);\n\r\n// _____________________________\r\n// Cross-Browser-Declarations.js\r\n\r\n// animation-frame used in WebM recording\r\n\r\n/*jshint -W079 */\r\nvar requestAnimationFrame = window.requestAnimationFrame;\r\nif (typeof requestAnimationFrame === 'undefined') {\r\n    if (typeof webkitRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = webkitRequestAnimationFrame;\r\n    } else if (typeof mozRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = mozRequestAnimationFrame;\r\n    } else if (typeof msRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = msRequestAnimationFrame;\r\n    } else if (typeof requestAnimationFrame === 'undefined') {\r\n        // via: https://gist.github.com/paulirish/1579671\r\n        var lastTime = 0;\r\n\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = function(callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function() {\r\n                callback(currTime + timeToCall);\r\n            }, timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar cancelAnimationFrame = window.cancelAnimationFrame;\r\nif (typeof cancelAnimationFrame === 'undefined') {\r\n    if (typeof webkitCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = webkitCancelAnimationFrame;\r\n    } else if (typeof mozCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = mozCancelAnimationFrame;\r\n    } else if (typeof msCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = msCancelAnimationFrame;\r\n    } else if (typeof cancelAnimationFrame === 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = function(id) {\r\n            clearTimeout(id);\r\n        };\r\n    }\r\n}\r\n\r\n// WebAudio API representer\r\nvar AudioContext = window.AudioContext;\r\n\r\nif (typeof AudioContext === 'undefined') {\r\n    if (typeof webkitAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    if (typeof mozAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = mozAudioContext;\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar URL = window.URL;\r\n\r\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n    /*global URL:true */\r\n    URL = webkitURL;\r\n}\r\n\r\nif (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n    }\r\n\r\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.mozGetUserMedia;\r\n    }\r\n}\r\n\r\nvar isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\r\nvar isOpera = !!window.opera || navigator.userAgent.indexOf('OPR/') !== -1;\r\nvar isSafari = navigator.userAgent.toLowerCase().indexOf('safari/') > -1;\r\nvar isChrome = (!isOpera && !isEdge && !!navigator.webkitGetUserMedia) || isElectron() || isSafari;\r\n\r\nvar MediaStream = window.MediaStream;\r\n\r\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n    MediaStream = webkitMediaStream;\r\n}\r\n\r\n/*global MediaStream:true */\r\nif (typeof MediaStream !== 'undefined') {\r\n    if (!('getVideoTracks' in MediaStream.prototype)) {\r\n        MediaStream.prototype.getVideoTracks = function() {\r\n            if (!this.getTracks) {\r\n                return [];\r\n            }\r\n\r\n            var tracks = [];\r\n            this.getTracks().forEach(function(track) {\r\n                if (track.kind.toString().indexOf('video') !== -1) {\r\n                    tracks.push(track);\r\n                }\r\n            });\r\n            return tracks;\r\n        };\r\n\r\n        MediaStream.prototype.getAudioTracks = function() {\r\n            if (!this.getTracks) {\r\n                return [];\r\n            }\r\n\r\n            var tracks = [];\r\n            this.getTracks().forEach(function(track) {\r\n                if (track.kind.toString().indexOf('audio') !== -1) {\r\n                    tracks.push(track);\r\n                }\r\n            });\r\n            return tracks;\r\n        };\r\n    }\r\n\r\n    // override \"stop\" method for all browsers\r\n    if (typeof MediaStream.prototype.stop === 'undefined') {\r\n        MediaStream.prototype.stop = function() {\r\n            this.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n        };\r\n    }\r\n}\r\n\r\n// below function via: http://goo.gl/B3ae8c\r\n/**\r\n * @param {number} bytes - Pass bytes and get formafted string.\r\n * @returns {string} - formafted string\r\n * @example\r\n * bytesToSize(1024*1024*5) === '5 GB'\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction bytesToSize(bytes) {\r\n    var k = 1000;\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) {\r\n        return '0 Bytes';\r\n    }\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\r\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object. This parameter is required.\r\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\r\n * @example\r\n * invokeSaveAsDialog(blob or file, [optional] fileName);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction invokeSaveAsDialog(file, fileName) {\r\n    if (!file) {\r\n        throw 'Blob object is required.';\r\n    }\r\n\r\n    if (!file.type) {\r\n        try {\r\n            file.type = 'video/webm';\r\n        } catch (e) {}\r\n    }\r\n\r\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\r\n\r\n    if (fileName && fileName.indexOf('.') !== -1) {\r\n        var splitted = fileName.split('.');\r\n        fileName = splitted[0];\r\n        fileExtension = splitted[1];\r\n    }\r\n\r\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\r\n\r\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\r\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\r\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\r\n        return navigator.msSaveBlob(file, fileFullName);\r\n    }\r\n\r\n    var hyperlink = document.createElement('a');\r\n    hyperlink.href = URL.createObjectURL(file);\r\n    hyperlink.download = fileFullName;\r\n\r\n    hyperlink.style = 'display:none;opacity:0;color:transparent;';\r\n    (document.body || document.documentElement).appendChild(hyperlink);\r\n\r\n    if (typeof hyperlink.click === 'function') {\r\n        hyperlink.click();\r\n    } else {\r\n        hyperlink.target = '_blank';\r\n        hyperlink.dispatchEvent(new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true\r\n        }));\r\n    }\r\n\r\n    URL.revokeObjectURL(hyperlink.href);\r\n}\r\n\r\n/**\r\n * from: https://github.com/cheton/is-electron/blob/master/index.js\r\n **/\r\nfunction isElectron() {\r\n    // Renderer process\r\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\r\n        return true;\r\n    }\r\n\r\n    // Main process\r\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\r\n        return true;\r\n    }\r\n\r\n    // Detect the user agent when the `nodeIntegration` option is set to true\r\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction setSrcObject(stream, element, ignoreCreateObjectURL) {\r\n    if ('createObjectURL' in URL && !ignoreCreateObjectURL) {\r\n        try {\r\n            element.src = URL.createObjectURL(stream);\r\n        } catch (e) {\r\n            setSrcObject(stream, element, true);\r\n            return;\r\n        }\r\n    } else if ('srcObject' in element) {\r\n        element.srcObject = stream;\r\n    } else if ('mozSrcObject' in element) {\r\n        element.mozSrcObject = stream;\r\n    } else {\r\n        alert('createObjectURL/srcObject both are not supported.');\r\n    }\r\n}\n\r\n// __________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\r\n// Storage.js\r\n\r\n/**\r\n * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\r\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\r\n * @example\r\n * Storage.AudioContext === webkitAudioContext\r\n * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Storage = {};\r\n\r\nif (typeof AudioContext !== 'undefined') {\r\n    Storage.AudioContext = AudioContext;\r\n} else if (typeof webkitAudioContext !== 'undefined') {\r\n    Storage.AudioContext = webkitAudioContext;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Storage = Storage;\r\n}\n\r\nfunction isMediaRecorderCompatible() {\r\n    var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\r\n    var isChrome = (!!window.chrome && !isOpera) || isElectron();\r\n    var isFirefox = typeof window.InstallTrigger !== 'undefined';\r\n\r\n    if (isFirefox) {\r\n        return true;\r\n    }\r\n\r\n    var nVer = navigator.appVersion;\r\n    var nAgt = navigator.userAgent;\r\n    var fullVersion = '' + parseFloat(navigator.appVersion);\r\n    var majorVersion = parseInt(navigator.appVersion, 10);\r\n    var nameOffset, verOffset, ix;\r\n\r\n    if (isChrome || isOpera) {\r\n        verOffset = nAgt.indexOf('Chrome');\r\n        fullVersion = nAgt.substring(verOffset + 7);\r\n    }\r\n\r\n    // trim the fullVersion string at semicolon/space if present\r\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    majorVersion = parseInt('' + fullVersion, 10);\r\n\r\n    if (isNaN(majorVersion)) {\r\n        fullVersion = '' + parseFloat(navigator.appVersion);\r\n        majorVersion = parseInt(navigator.appVersion, 10);\r\n    }\r\n\r\n    return majorVersion >= 49;\r\n}\n\r\n// ______________________\n// MediaStreamRecorder.js\n\n/**\n * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.\n * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link https://github.com/muaz-khan|Muaz Khan}\n * @typedef MediaStreamRecorder\n * @class\n * @example\n * var config = {\n *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\n *     audioBitsPerSecond : 256 * 8 * 1024,\n *     videoBitsPerSecond : 256 * 8 * 1024,\n *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\n *     checkForInactiveTracks: true,\n *     timeSlice: 1000, // concatenate intervals based blobs\n *     ondataavailable: function() {}, // get intervals based blobs\n *     ignoreMutedMedia: true\n * }\n * var recorder = new MediaStreamRecorder(mediaStream, config);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n *\n *     // or\n *     var blob = recorder.blob;\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", timeSlice: 1000}\n * @throws Will throw an error if first argument \"MediaStream\" is missing. Also throws error if \"MediaRecorder API\" are not supported by the browser.\n */\n\nfunction MediaStreamRecorder(mediaStream, config) {\n    var self = this;\n\n    if (typeof mediaStream === 'undefined') {\n        throw 'First argument \"MediaStream\" is required.';\n    }\n\n    if (typeof MediaRecorder === 'undefined') {\n        throw 'Your browser does not supports Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.';\n    }\n\n    config = config || {\n        // bitsPerSecond: 256 * 8 * 1024,\n        mimeType: 'video/webm'\n    };\n\n    if (config.type === 'audio') {\n        if (mediaStream.getVideoTracks().length && mediaStream.getAudioTracks().length) {\n            var stream;\n            if (!!navigator.mozGetUserMedia) {\n                stream = new MediaStream();\n                stream.addTrack(mediaStream.getAudioTracks()[0]);\n            } else {\n                // webkitMediaStream\n                stream = new MediaStream(mediaStream.getAudioTracks());\n            }\n            mediaStream = stream;\n        }\n\n        if (!config.mimeType || config.mimeType.toString().toLowerCase().indexOf('audio') === -1) {\n            config.mimeType = isChrome ? 'audio/webm' : 'audio/ogg';\n        }\n\n        if (config.mimeType && config.mimeType.toString().toLowerCase() !== 'audio/ogg' && !!navigator.mozGetUserMedia) {\n            // forcing better codecs on Firefox (via #166)\n            config.mimeType = 'audio/ogg';\n        }\n    }\n\n    var arrayOfBlobs = [];\n\n    /**\n     * This method returns array of blobs. Use only with \"timeSlice\". Its useful to preview recording anytime, without using the \"stop\" method.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * var arrayOfBlobs = recorder.getArrayOfBlobs();\n     * @returns {Array} Returns array of recorded blobs.\n     */\n    this.getArrayOfBlobs = function() {\n        return arrayOfBlobs;\n    };\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        // set defaults\n        self.blob = null;\n        self.clearRecordedData();\n        self.timestamps = [];\n        allStates = [];\n        arrayOfBlobs = [];\n\n        var recorderHints = config;\n\n        if (!config.disableLogs) {\n            console.log('Passing following config over MediaRecorder API.', recorderHints);\n        }\n\n        if (mediaRecorder) {\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\n            mediaRecorder = null;\n        }\n\n        if (isChrome && !isMediaRecorderCompatible()) {\n            // to support video-only recording on stable\n            recorderHints = 'video/vp8';\n        }\n\n        if (typeof MediaRecorder.isTypeSupported === 'function' && recorderHints.mimeType) {\n            if (!MediaRecorder.isTypeSupported(recorderHints.mimeType)) {\n                if (!config.disableLogs) {\n                    console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\n                }\n\n                recorderHints.mimeType = config.type === 'audio' ? 'audio/webm' : 'video/webm';\n            }\n        }\n\n        // using MediaRecorder API here\n        try {\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\n\n            // reset\n            config.mimeType = recorderHints.mimeType;\n        } catch (e) {\n            // chrome-based fallback\n            mediaRecorder = new MediaRecorder(mediaStream);\n        }\n\n        // old hack?\n        if (recorderHints.mimeType && !MediaRecorder.isTypeSupported && 'canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(recorderHints.mimeType) === false) {\n            if (!config.disableLogs) {\n                console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\n            }\n        }\n\n        // ignore muted/disabled/inactive tracks\n        mediaRecorder.ignoreMutedMedia = config.ignoreMutedMedia === true;\n\n        // Dispatching OnDataAvailable Handler\n        mediaRecorder.ondataavailable = function(e) {\n            if (e.data) {\n                allStates.push('ondataavailable: ' + bytesToSize(e.data.size));\n            }\n\n            if (typeof config.timeSlice === 'number') {\n                if (e.data && e.data.size && e.data.size > 100) {\n                    arrayOfBlobs.push(e.data);\n                    updateTimeStamp();\n\n                    if (typeof config.ondataavailable === 'function') {\n                        // intervals based blobs\n                        var blob = config.getNativeBlob ? e.data : new Blob([e.data], {\n                            type: getMimeType(recorderHints)\n                        });\n                        config.ondataavailable(blob);\n                    }\n                }\n                return;\n            }\n\n            if (!e.data || !e.data.size || e.data.size < 100 || self.blob) {\n                // make sure that stopRecording always getting fired\n                // even if there is invalid data\n                if (self.recordingCallback) {\n                    self.recordingCallback(new Blob([], {\n                        type: getMimeType(recorderHints)\n                    }));\n                    self.recordingCallback = null;\n                }\n                return;\n            }\n\n            self.blob = config.getNativeBlob ? e.data : new Blob([e.data], {\n                type: getMimeType(recorderHints)\n            });\n\n            if (self.recordingCallback) {\n                self.recordingCallback(self.blob);\n                self.recordingCallback = null;\n            }\n        };\n\n        mediaRecorder.onstart = function() {\n            allStates.push('started');\n        };\n\n        mediaRecorder.onpause = function() {\n            allStates.push('paused');\n        };\n\n        mediaRecorder.onresume = function() {\n            allStates.push('resumed');\n        };\n\n        mediaRecorder.onstop = function() {\n            allStates.push('stopped');\n        };\n\n        mediaRecorder.onerror = function(error) {\n            allStates.push('error: ' + error);\n\n            if (!config.disableLogs) {\n                // via: https://w3c.github.io/mediacapture-record/MediaRecorder.html#exception-summary\n                if (error.name.toString().toLowerCase().indexOf('invalidstate') !== -1) {\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.', error);\n                } else if (error.name.toString().toLowerCase().indexOf('notsupported') !== -1) {\n                    console.error('MIME type (', recorderHints.mimeType, ') is not supported.', error);\n                } else if (error.name.toString().toLowerCase().indexOf('security') !== -1) {\n                    console.error('MediaRecorder security error', error);\n                }\n\n                // older code below\n                else if (error.name === 'OutOfMemory') {\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\n                } else if (error.name === 'IllegalStreamModification') {\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\n                } else if (error.name === 'OtherRecordingError') {\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\n                } else if (error.name === 'GenericError') {\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\n                } else {\n                    console.error('MediaRecorder Error', error);\n                }\n            }\n\n            (function(looper) {\n                if (!self.manuallyStopped && mediaRecorder && mediaRecorder.state === 'inactive') {\n                    delete config.timeslice;\n\n                    // 10 minutes, enough?\n                    mediaRecorder.start(10 * 60 * 1000);\n                    return;\n                }\n\n                setTimeout(looper, 1000);\n            })();\n\n            if (mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\n                mediaRecorder.stop();\n            }\n        };\n\n        if (typeof config.timeSlice === 'number') {\n            updateTimeStamp();\n            mediaRecorder.start(config.timeSlice);\n        } else {\n            // default is 60 minutes; enough?\n            // use config => {timeSlice: 1000} otherwise\n\n            mediaRecorder.start(3.6e+6);\n        }\n\n        if (config.initCallback) {\n            config.initCallback(); // old code\n        }\n    };\n\n    /**\n     * @property {Array} timestamps - Array of time stamps\n     * @memberof MediaStreamRecorder\n     * @example\n     * console.log(recorder.timestamps);\n     */\n    this.timestamps = [];\n\n    function updateTimeStamp() {\n        self.timestamps.push(new Date().getTime());\n\n        if (typeof config.onTimeStamp === 'function') {\n            config.onTimeStamp(self.timestamps[self.timestamps.length - 1], self.timestamps);\n        }\n    }\n\n    function getMimeType(secondObject) {\n        if (mediaRecorder && mediaRecorder.mimeType) {\n            return mediaRecorder.mimeType;\n        }\n\n        return secondObject.mimeType || 'video/webm';\n    }\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        callback = callback || function() {};\n\n        self.manuallyStopped = true; // used inside the mediaRecorder.onerror\n\n        if (!mediaRecorder) {\n            return;\n        }\n\n        this.recordingCallback = callback;\n\n        if (mediaRecorder.state === 'recording') {\n            mediaRecorder.stop();\n        }\n\n        if (typeof config.timeSlice === 'number') {\n            setTimeout(function() {\n                self.blob = new Blob(arrayOfBlobs, {\n                    type: getMimeType(config)\n                });\n\n                self.recordingCallback(self.blob);\n            }, 100);\n        }\n    };\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === 'recording') {\n            mediaRecorder.pause();\n        }\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === 'paused') {\n            mediaRecorder.resume();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        if (mediaRecorder && mediaRecorder.state === 'recording') {\n            self.stop(clearRecordedDataCB);\n        }\n\n        clearRecordedDataCB();\n    };\n\n    function clearRecordedDataCB() {\n        arrayOfBlobs = [];\n        mediaRecorder = null;\n        self.timestamps = [];\n    }\n\n    // Reference to \"MediaRecorder\" object\n    var mediaRecorder;\n\n    /**\n     * Access to native MediaRecorder API\n     * @method\n     * @memberof MediaStreamRecorder\n     * @instance\n     * @example\n     * var internal = recorder.getInternalRecorder();\n     * internal.ondataavailable = function() {}; // override\n     * internal.stream, internal.onpause, internal.onstop, etc.\n     * @returns {Object} Returns internal recording object.\n     */\n    this.getInternalRecorder = function() {\n        return mediaRecorder;\n    };\n\n    function isMediaStreamActive() {\n        if ('active' in mediaStream) {\n            if (!mediaStream.active) {\n                return false;\n            }\n        } else if ('ended' in mediaStream) { // old hack\n            if (mediaStream.ended) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.stop(function() {\n     *     var blob = recorder.blob;\n     * });\n     */\n    this.blob = null;\n\n\n    /**\n     * Get MediaRecorder readonly state.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * var state = recorder.getState();\n     * @returns {String} Returns recording state.\n     */\n    this.getState = function() {\n        if (!mediaRecorder) {\n            return 'inactive';\n        }\n\n        return mediaRecorder.state || 'inactive';\n    };\n\n    // list of all recording states\n    var allStates = [];\n\n    /**\n     * Get MediaRecorder all recording states.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * var state = recorder.getAllStates();\n     * @returns {Array} Returns all recording states\n     */\n    this.getAllStates = function() {\n        return allStates;\n    };\n\n    // if any Track within the MediaStream is muted or not enabled at any time, \n    // the browser will only record black frames \n    // or silence since that is the content produced by the Track\n    // so we need to stopRecording as soon as any single track ends.\n    if (typeof config.checkForInactiveTracks === 'undefined') {\n        config.checkForInactiveTracks = false; // disable to minimize CPU usage\n    }\n\n    var self = this;\n\n    // this method checks if media stream is stopped\n    // or if any track is ended.\n    (function looper() {\n        if (!mediaRecorder || config.checkForInactiveTracks === false) {\n            return;\n        }\n\n        if (isMediaStreamActive() === false) {\n            if (!config.disableLogs) {\n                console.log('MediaStream seems stopped.');\n            }\n            self.stop();\n            return;\n        }\n\n        setTimeout(looper, 1000); // check every second\n    })();\n\n    // for debugging\n    this.name = 'MediaStreamRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.MediaStreamRecorder = MediaStreamRecorder;\n}\n\r\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\r\n// https://github.com/mattdiamond/Recorderjs#license-mit\r\n// ______________________\r\n// StereoAudioRecorder.js\r\n\r\n/**\r\n * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\r\n * @summary JavaScript standalone object for stereo audio recording.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\r\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\r\n * @typedef StereoAudioRecorder\r\n * @class\r\n * @example\r\n * var recorder = new StereoAudioRecorder(MediaStream, {\r\n *     sampleRate: 44100,\r\n *     bufferSize: 4096\r\n * });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\r\n */\r\n\r\nfunction StereoAudioRecorder(mediaStream, config) {\r\n    if (!mediaStream.getAudioTracks().length) {\r\n        throw 'Your stream has no audio tracks.';\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var self = this;\r\n\r\n    // variables\r\n    var leftchannel = [];\r\n    var rightchannel = [];\r\n    var recording = false;\r\n    var recordingLength = 0;\r\n    var jsAudioNode;\r\n\r\n    var numberOfAudioChannels = 2;\r\n\r\n    /**\r\n     * Set sample rates such as 8K or 16K. Reference: http://stackoverflow.com/a/28977136/552182\r\n     * @property {number} desiredSampRate - Desired Bits per sample * 1000\r\n     * @memberof StereoAudioRecorder\r\n     * @instance\r\n     * @example\r\n     * var recorder = StereoAudioRecorder(mediaStream, {\r\n     *   desiredSampRate: 16 * 1000 // bits-per-sample * 1000\r\n     * });\r\n     */\r\n    var desiredSampRate = config.desiredSampRate;\r\n\r\n    // backward compatibility\r\n    if (config.leftChannel === true) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (config.numberOfAudioChannels === 1) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (!numberOfAudioChannels || numberOfAudioChannels < 1) {\r\n        numberOfAudioChannels = 2;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('StereoAudioRecorder is set to record number of channels: ', numberOfAudioChannels);\r\n    }\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = true;\r\n    }\r\n\r\n    function isMediaStreamActive() {\r\n        if (config.checkForInactiveTracks === false) {\r\n            // always return \"true\"\r\n            return true;\r\n        }\r\n\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        resetVariables();\r\n\r\n        isAudioProcessStarted = isPaused = false;\r\n        recording = true;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            looper();\r\n        }\r\n    };\r\n\r\n    function mergeLeftRightBuffers(config, callback) {\r\n        function mergeAudioBuffers(config, cb) {\r\n            var numberOfAudioChannels = config.numberOfAudioChannels;\r\n\r\n            // todo: \"slice(0)\" --- is it causes loop? Should be removed?\r\n            var leftBuffers = config.leftBuffers.slice(0);\r\n            var rightBuffers = config.rightBuffers.slice(0);\r\n            var sampleRate = config.sampleRate;\r\n            var internalInterleavedLength = config.internalInterleavedLength;\r\n            var desiredSampRate = config.desiredSampRate;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n                rightBuffers = mergeBuffers(rightBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                    rightBuffers = interpolateArray(rightBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            // set sample rate as desired sample rate\r\n            if (desiredSampRate) {\r\n                sampleRate = desiredSampRate;\r\n            }\r\n\r\n            // for changing the sampling rate, reference:\r\n            // http://stackoverflow.com/a/28977136/552182\r\n            function interpolateArray(data, newSampleRate, oldSampleRate) {\r\n                var fitCount = Math.round(data.length * (newSampleRate / oldSampleRate));\r\n                var newData = [];\r\n                var springFactor = Number((data.length - 1) / (fitCount - 1));\r\n                newData[0] = data[0];\r\n                for (var i = 1; i < fitCount - 1; i++) {\r\n                    var tmp = i * springFactor;\r\n                    var before = Number(Math.floor(tmp)).toFixed();\r\n                    var after = Number(Math.ceil(tmp)).toFixed();\r\n                    var atPoint = tmp - before;\r\n                    newData[i] = linearInterpolate(data[before], data[after], atPoint);\r\n                }\r\n                newData[fitCount - 1] = data[data.length - 1];\r\n                return newData;\r\n            }\r\n\r\n            function linearInterpolate(before, after, atPoint) {\r\n                return before + (after - before) * atPoint;\r\n            }\r\n\r\n            function mergeBuffers(channelBuffer, rLength) {\r\n                var result = new Float64Array(rLength);\r\n                var offset = 0;\r\n                var lng = channelBuffer.length;\r\n\r\n                for (var i = 0; i < lng; i++) {\r\n                    var buffer = channelBuffer[i];\r\n                    result.set(buffer, offset);\r\n                    offset += buffer.length;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function interleave(leftChannel, rightChannel) {\r\n                var length = leftChannel.length + rightChannel.length;\r\n\r\n                var result = new Float64Array(length);\r\n\r\n                var inputIndex = 0;\r\n\r\n                for (var index = 0; index < length;) {\r\n                    result[index++] = leftChannel[inputIndex];\r\n                    result[index++] = rightChannel[inputIndex];\r\n                    inputIndex++;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function writeUTFBytes(view, offset, string) {\r\n                var lng = string.length;\r\n                for (var i = 0; i < lng; i++) {\r\n                    view.setUint8(offset + i, string.charCodeAt(i));\r\n                }\r\n            }\r\n\r\n            // interleave both channels together\r\n            var interleaved;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                interleaved = interleave(leftBuffers, rightBuffers);\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                interleaved = leftBuffers;\r\n            }\r\n\r\n            var interleavedLength = interleaved.length;\r\n\r\n            // create wav file\r\n            var resultingBufferLength = 44 + interleavedLength * 2;\r\n\r\n            var buffer = new ArrayBuffer(resultingBufferLength);\r\n\r\n            var view = new DataView(buffer);\r\n\r\n            // RIFF chunk descriptor/identifier \r\n            writeUTFBytes(view, 0, 'RIFF');\r\n\r\n            // RIFF chunk length\r\n            view.setUint32(4, 44 + interleavedLength * 2, true);\r\n\r\n            // RIFF type \r\n            writeUTFBytes(view, 8, 'WAVE');\r\n\r\n            // format chunk identifier \r\n            // FMT sub-chunk\r\n            writeUTFBytes(view, 12, 'fmt ');\r\n\r\n            // format chunk length \r\n            view.setUint32(16, 16, true);\r\n\r\n            // sample format (raw)\r\n            view.setUint16(20, 1, true);\r\n\r\n            // stereo (2 channels)\r\n            view.setUint16(22, numberOfAudioChannels, true);\r\n\r\n            // sample rate \r\n            view.setUint32(24, sampleRate, true);\r\n\r\n            // byte rate (sample rate * block align)\r\n            view.setUint32(28, sampleRate * 2, true);\r\n\r\n            // block align (channel count * bytes per sample) \r\n            view.setUint16(32, numberOfAudioChannels * 2, true);\r\n\r\n            // bits per sample \r\n            view.setUint16(34, 16, true);\r\n\r\n            // data sub-chunk\r\n            // data chunk identifier \r\n            writeUTFBytes(view, 36, 'data');\r\n\r\n            // data chunk length \r\n            view.setUint32(40, interleavedLength * 2, true);\r\n\r\n            // write the PCM samples\r\n            var lng = interleavedLength;\r\n            var index = 44;\r\n            var volume = 1;\r\n            for (var i = 0; i < lng; i++) {\r\n                view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\r\n                index += 2;\r\n            }\r\n\r\n            if (cb) {\r\n                return cb({\r\n                    buffer: buffer,\r\n                    view: view\r\n                });\r\n            }\r\n\r\n            postMessage({\r\n                buffer: buffer,\r\n                view: view\r\n            });\r\n        }\r\n\r\n        if (isEdge || isOpera || isSafari || config.noWorker) {\r\n            mergeAudioBuffers(config, function(data) {\r\n                callback(data.buffer, data.view);\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        var webWorker = processInWebWorker(mergeAudioBuffers);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            callback(event.data.buffer, event.data.view);\r\n\r\n            // release memory\r\n            URL.revokeObjectURL(webWorker.workerURL);\r\n        };\r\n\r\n        webWorker.postMessage(config);\r\n    }\r\n\r\n    function processInWebWorker(_function) {\r\n        var workerURL = URL.createObjectURL(new Blob([_function.toString(),\r\n            ';this.onmessage =  function (e) {' + _function.name + '(e.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(workerURL);\r\n        worker.workerURL = workerURL;\r\n        return worker;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        // stop recording\r\n        recording = false;\r\n\r\n        mergeLeftRightBuffers({\r\n            desiredSampRate: desiredSampRate,\r\n            sampleRate: sampleRate,\r\n            numberOfAudioChannels: numberOfAudioChannels,\r\n            internalInterleavedLength: recordingLength,\r\n            leftBuffers: leftchannel,\r\n            rightBuffers: numberOfAudioChannels === 1 ? [] : rightchannel\r\n        }, function(buffer, view) {\r\n            /**\r\n             * @property {Blob} blob - The recorded blob object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            self.blob = new Blob([view], {\r\n                type: 'audio/wav'\r\n            });\r\n\r\n            /**\r\n             * @property {ArrayBuffer} buffer - The recorded buffer object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var buffer = recorder.buffer;\r\n             * });\r\n             */\r\n            self.buffer = new ArrayBuffer(view.buffer.byteLength);\r\n\r\n            /**\r\n             * @property {DataView} view - The recorded data-view object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var view = recorder.view;\r\n             * });\r\n             */\r\n            self.view = view;\r\n\r\n            self.sampleRate = desiredSampRate || sampleRate;\r\n            self.bufferSize = bufferSize;\r\n\r\n            // recorded audio length\r\n            self.length = recordingLength;\r\n\r\n            isAudioProcessStarted = false;\r\n\r\n            if (callback) {\r\n                callback(self.blob);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (!Storage.AudioContextConstructor) {\r\n        Storage.AudioContextConstructor = new Storage.AudioContext();\r\n    }\r\n\r\n    var context = Storage.AudioContextConstructor;\r\n\r\n    // creates an audio node from the microphone incoming stream\r\n    var audioInput = context.createMediaStreamSource(mediaStream);\r\n\r\n    var legalBufferValues = [0, 256, 512, 1024, 2048, 4096, 8192, 16384];\r\n\r\n    /**\r\n     * From the spec: This value controls how frequently the audioprocess event is\r\n     * dispatched and how many sample-frames need to be processed each call.\r\n     * Lower values for buffer size will result in a lower (better) latency.\r\n     * Higher values will be necessary to avoid audio breakup and glitches\r\n     * The size of the buffer (in sample-frames) which needs to\r\n     * be processed each time onprocessaudio is called.\r\n     * Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\r\n     * @property {number} bufferSize - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     bufferSize: 4096\r\n     * });\r\n     */\r\n\r\n    // \"0\" means, let chrome decide the most accurate buffer-size for current platform.\r\n    var bufferSize = typeof config.bufferSize === 'undefined' ? 4096 : config.bufferSize;\r\n\r\n    if (legalBufferValues.indexOf(bufferSize) === -1) {\r\n        if (!config.disableLogs) {\r\n            console.warn('Legal values for buffer-size are ' + JSON.stringify(legalBufferValues, null, '\\t'));\r\n        }\r\n    }\r\n\r\n    if (context.createJavaScriptNode) {\r\n        jsAudioNode = context.createJavaScriptNode(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else if (context.createScriptProcessor) {\r\n        jsAudioNode = context.createScriptProcessor(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else {\r\n        throw 'WebAudio API has no support on this browser.';\r\n    }\r\n\r\n    // connect the stream to the script processor\r\n    audioInput.connect(jsAudioNode);\r\n\r\n    if (!config.bufferSize) {\r\n        bufferSize = jsAudioNode.bufferSize; // device buffer-size\r\n    }\r\n\r\n    /**\r\n     * The sample rate (in sample-frames per second) at which the\r\n     * AudioContext handles audio. It is assumed that all AudioNodes\r\n     * in the context run at this rate. In making this assumption,\r\n     * sample-rate converters or \"varispeed\" processors are not supported\r\n     * in real-time processing.\r\n     * The sampleRate parameter describes the sample-rate of the\r\n     * linear PCM audio data in the buffer in sample-frames per second.\r\n     * An implementation must support sample-rates in at least\r\n     * the range 22050 to 96000.\r\n     * @property {number} sampleRate - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     sampleRate: 44100\r\n     * });\r\n     */\r\n    var sampleRate = typeof config.sampleRate !== 'undefined' ? config.sampleRate : context.sampleRate || 44100;\r\n\r\n    if (sampleRate < 22050 || sampleRate > 96000) {\r\n        // Ref: http://stackoverflow.com/a/26303918/552182\r\n        if (!config.disableLogs) {\r\n            console.warn('sample-rate must be under range 22050 and 96000.');\r\n        }\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('sample-rate', sampleRate);\r\n        console.log('buffer-size', bufferSize);\r\n\r\n        if (config.desiredSampRate) {\r\n            console.log('Desired sample-rate', config.desiredSampRate);\r\n        }\r\n    }\r\n\r\n    var isPaused = false;\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        if (!recording) {\r\n            if (!config.disableLogs) {\r\n                console.log('Seems recording has been restarted.');\r\n            }\r\n            this.record();\r\n            return;\r\n        }\r\n\r\n        isPaused = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        config.checkForInactiveTracks = false;\r\n\r\n        if (recording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function resetVariables() {\r\n        leftchannel = [];\r\n        rightchannel = [];\r\n        recordingLength = 0;\r\n        isAudioProcessStarted = false;\r\n        recording = false;\r\n        isPaused = false;\r\n        context = null;\r\n\r\n        self.leftchannel = leftchannel;\r\n        self.rightchannel = rightchannel;\r\n        self.numberOfAudioChannels = numberOfAudioChannels;\r\n        self.desiredSampRate = desiredSampRate;\r\n        self.sampleRate = sampleRate;\r\n        self.recordingLength = recordingLength;\r\n\r\n        intervalsBasedBuffers = {\r\n            left: [],\r\n            right: [],\r\n            recordingLength: 0\r\n        };\r\n    }\r\n\r\n    function clearRecordedDataCB() {\r\n        if (jsAudioNode) {\r\n            jsAudioNode.onaudioprocess = null;\r\n            jsAudioNode.disconnect();\r\n            jsAudioNode = null;\r\n        }\r\n\r\n        if (audioInput) {\r\n            audioInput.disconnect();\r\n            audioInput = null;\r\n        }\r\n\r\n        resetVariables();\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'StereoAudioRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var isAudioProcessStarted = false;\r\n\r\n    function onAudioProcessDataAvailable(e) {\r\n        if (isPaused) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            jsAudioNode.disconnect();\r\n            recording = false;\r\n        }\r\n\r\n        if (!recording) {\r\n            if (audioInput) {\r\n                audioInput.disconnect();\r\n                audioInput = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * This method is called on \"onaudioprocess\" event's first invocation.\r\n         * @method {function} onAudioProcessStarted\r\n         * @memberof StereoAudioRecorder\r\n         * @example\r\n         * recorder.onAudioProcessStarted: function() { };\r\n         */\r\n        if (!isAudioProcessStarted) {\r\n            isAudioProcessStarted = true;\r\n            if (config.onAudioProcessStarted) {\r\n                config.onAudioProcessStarted();\r\n            }\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        }\r\n\r\n        var left = e.inputBuffer.getChannelData(0);\r\n\r\n        // we clone the samples\r\n        var chLeft = new Float32Array(left);\r\n        leftchannel.push(chLeft);\r\n\r\n        if (numberOfAudioChannels === 2) {\r\n            var right = e.inputBuffer.getChannelData(1);\r\n            var chRight = new Float32Array(right);\r\n            rightchannel.push(chRight);\r\n        }\r\n\r\n        recordingLength += bufferSize;\r\n\r\n        // export raw PCM\r\n        self.recordingLength = recordingLength;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            intervalsBasedBuffers.recordingLength += bufferSize;\r\n            intervalsBasedBuffers.left.push(chLeft);\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                intervalsBasedBuffers.right.push(chRight);\r\n            }\r\n        }\r\n    }\r\n\r\n    jsAudioNode.onaudioprocess = onAudioProcessDataAvailable;\r\n\r\n    // to prevent self audio to be connected with speakers\r\n    jsAudioNode.connect(context.destination);\r\n\r\n    // export raw PCM\r\n    this.leftchannel = leftchannel;\r\n    this.rightchannel = rightchannel;\r\n    this.numberOfAudioChannels = numberOfAudioChannels;\r\n    this.desiredSampRate = desiredSampRate;\r\n    this.sampleRate = sampleRate;\r\n    self.recordingLength = recordingLength;\r\n\r\n    // helper for intervals based blobs\r\n    var intervalsBasedBuffers = {\r\n        left: [],\r\n        right: [],\r\n        recordingLength: 0\r\n    };\r\n\r\n    // this looper is used to support intervals based blobs (via timeSlice+ondataavailable)\r\n    function looper() {\r\n        if (!recording || typeof config.ondataavailable !== 'function' || typeof config.timeSlice === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (intervalsBasedBuffers.left.length) {\r\n            mergeLeftRightBuffers({\r\n                desiredSampRate: desiredSampRate,\r\n                sampleRate: sampleRate,\r\n                numberOfAudioChannels: numberOfAudioChannels,\r\n                internalInterleavedLength: intervalsBasedBuffers.recordingLength,\r\n                leftBuffers: intervalsBasedBuffers.left,\r\n                rightBuffers: numberOfAudioChannels === 1 ? [] : intervalsBasedBuffers.right\r\n            }, function(buffer, view) {\r\n                var blob = new Blob([view], {\r\n                    type: 'audio/wav'\r\n                });\r\n                config.ondataavailable(blob);\r\n\r\n                setTimeout(looper, config.timeSlice);\r\n            });\r\n\r\n            intervalsBasedBuffers = {\r\n                left: [],\r\n                right: [],\r\n                recordingLength: 0\r\n            };\r\n        } else {\r\n            setTimeout(looper, config.timeSlice);\r\n        }\r\n    }\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.StereoAudioRecorder = StereoAudioRecorder;\r\n}\r\n\r\n// _________________\r\n// CanvasRecorder.js\r\n\r\n/**\r\n * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\r\n * @summary HTML2Canvas recording into video WebM.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\r\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\r\n * @typedef CanvasRecorder\r\n * @class\r\n * @example\r\n * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\r\n * @param {object} config - {disableLogs:true, initCallback: function}\r\n */\r\n\r\nfunction CanvasRecorder(htmlElement, config) {\r\n    if (typeof html2canvas === 'undefined') {\r\n        throw 'Please link: https://cdn.webrtc-experiment.com/screenshot.js';\r\n    }\r\n\r\n    config = config || {};\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    // via DetectRTC.js\r\n    var isCanvasSupportsStreamCapturing = false;\r\n    ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\r\n        if (item in document.createElement('canvas')) {\r\n            isCanvasSupportsStreamCapturing = true;\r\n        }\r\n    });\r\n\r\n    var _isChrome = (!!window.webkitRTCPeerConnection || !!window.webkitGetUserMedia) && !!window.chrome;\r\n\r\n    var chromeVersion = 50;\r\n    var matchArray = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n    if (_isChrome && matchArray && matchArray[2]) {\r\n        chromeVersion = parseInt(matchArray[2], 10);\r\n    }\r\n\r\n    if (_isChrome && chromeVersion < 52) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    var globalCanvas, mediaStreamRecorder;\r\n\r\n    if (isCanvasSupportsStreamCapturing) {\r\n        if (!config.disableLogs) {\r\n            console.log('Your browser supports both MediRecorder API and canvas.captureStream!');\r\n        }\r\n\r\n        if (htmlElement instanceof HTMLCanvasElement) {\r\n            globalCanvas = htmlElement;\r\n        } else if (htmlElement instanceof CanvasRenderingContext2D) {\r\n            globalCanvas = htmlElement.canvas;\r\n        } else {\r\n            throw 'Please pass either HTMLCanvasElement or CanvasRenderingContext2D.';\r\n        }\r\n    } else if (!!navigator.mozGetUserMedia) {\r\n        if (!config.disableLogs) {\r\n            console.error('Canvas recording is NOT supported in Firefox.');\r\n        }\r\n    }\r\n\r\n    var isRecording;\r\n\r\n    /**\r\n     * This method records Canvas.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        isRecording = true;\r\n\r\n        if (isCanvasSupportsStreamCapturing && !config.useWhammyRecorder) {\r\n            // CanvasCaptureMediaStream\r\n            var canvasMediaStream;\r\n            if ('captureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.captureStream(25); // 25 FPS\r\n            } else if ('mozCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.mozCaptureStream(25);\r\n            } else if ('webkitCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.webkitCaptureStream(25);\r\n            }\r\n\r\n            try {\r\n                var mdStream = new MediaStream();\r\n                mdStream.addTrack(canvasMediaStream.getVideoTracks()[0]);\r\n                canvasMediaStream = mdStream;\r\n            } catch (e) {}\r\n\r\n            if (!canvasMediaStream) {\r\n                throw 'captureStream API are NOT available.';\r\n            }\r\n\r\n            // Note: Jan 18, 2016 status is that, \r\n            // Firefox MediaRecorder API can't record CanvasCaptureMediaStream object.\r\n            mediaStreamRecorder = new MediaStreamRecorder(canvasMediaStream, {\r\n                mimeType: 'video/webm'\r\n            });\r\n            mediaStreamRecorder.record();\r\n        } else {\r\n            whammy.frames = [];\r\n            lastTime = new Date().getTime();\r\n            drawCanvasFrame();\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    this.getWebPImages = function(callback) {\r\n        if (htmlElement.nodeName.toLowerCase() !== 'canvas') {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        var framesLength = whammy.frames.length;\r\n        whammy.frames.forEach(function(frame, idx) {\r\n            var framesRemaining = framesLength - idx;\r\n            if (!config.disableLogs) {\r\n                console.log(framesRemaining + '/' + framesLength + ' frames remaining');\r\n            }\r\n\r\n            if (config.onEncodingCallback) {\r\n                config.onEncodingCallback(framesRemaining, framesLength);\r\n            }\r\n\r\n            var webp = frame.image.toDataURL('image/webp', 1);\r\n            whammy.frames[idx].image = webp;\r\n        });\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Generating WebM');\r\n        }\r\n\r\n        callback();\r\n    };\r\n\r\n    /**\r\n     * This method stops recording Canvas.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        isRecording = false;\r\n\r\n        var that = this;\r\n\r\n        if (isCanvasSupportsStreamCapturing && mediaStreamRecorder) {\r\n            mediaStreamRecorder.stop(callback);\r\n            return;\r\n        }\r\n\r\n        this.getWebPImages(function() {\r\n            /**\r\n             * @property {Blob} blob - Recorded frames in video/webm blob.\r\n             * @memberof CanvasRecorder\r\n             * @example\r\n             * recorder.stop(function() {\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            whammy.compile(function(blob) {\r\n                if (!config.disableLogs) {\r\n                    console.log('Recording finished!');\r\n                }\r\n\r\n                that.blob = blob;\r\n\r\n                if (that.blob.forEach) {\r\n                    that.blob = new Blob([], {\r\n                        type: 'video/webm'\r\n                    });\r\n                }\r\n\r\n                if (callback) {\r\n                    callback(that.blob);\r\n                }\r\n\r\n                whammy.frames = [];\r\n            });\r\n        });\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.pause();\r\n            return;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.resume();\r\n            return;\r\n        }\r\n\r\n        if (!isRecording) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (isRecording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isRecording = false;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'CanvasRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    function cloneCanvas() {\r\n        //create a new canvas\r\n        var newCanvas = document.createElement('canvas');\r\n        var context = newCanvas.getContext('2d');\r\n\r\n        //set dimensions\r\n        newCanvas.width = htmlElement.width;\r\n        newCanvas.height = htmlElement.height;\r\n\r\n        //apply the old canvas to the new one\r\n        context.drawImage(htmlElement, 0, 0);\r\n\r\n        //return the new canvas\r\n        return newCanvas;\r\n    }\r\n\r\n    function drawCanvasFrame() {\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawCanvasFrame, 500);\r\n        }\r\n\r\n        if (htmlElement.nodeName.toLowerCase() === 'canvas') {\r\n            var duration = new Date().getTime() - lastTime;\r\n            // via #206, by Jack i.e. @Seymourr\r\n            lastTime = new Date().getTime();\r\n\r\n            whammy.frames.push({\r\n                image: cloneCanvas(),\r\n                duration: duration\r\n            });\r\n\r\n            if (isRecording) {\r\n                setTimeout(drawCanvasFrame, config.frameInterval);\r\n            }\r\n            return;\r\n        }\r\n\r\n        html2canvas(htmlElement, {\r\n            grabMouse: typeof config.showMousePointer === 'undefined' || config.showMousePointer,\r\n            onrendered: function(canvas) {\r\n                var duration = new Date().getTime() - lastTime;\r\n                if (!duration) {\r\n                    return setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n\r\n                // via #206, by Jack i.e. @Seymourr\r\n                lastTime = new Date().getTime();\r\n\r\n                whammy.frames.push({\r\n                    image: canvas.toDataURL('image/webp', 1),\r\n                    duration: duration\r\n                });\r\n\r\n                if (isRecording) {\r\n                    setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    var lastTime = new Date().getTime();\r\n\r\n    var whammy = new Whammy.Video(100);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.CanvasRecorder = CanvasRecorder;\r\n}\n\r\n// _________________\r\n// WhammyRecorder.js\r\n\r\n/**\r\n * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\r\n * @summary Video recording feature in Chrome.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\r\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\r\n * @typedef WhammyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WhammyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction WhammyRecorder(mediaStream, config) {\r\n\r\n    config = config || {};\r\n\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('Using frames-interval:', config.frameInterval);\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (!config.width) {\r\n            config.width = 320;\r\n        }\r\n\r\n        if (!config.height) {\r\n            config.height = 240;\r\n        }\r\n\r\n        if (!config.video) {\r\n            config.video = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        if (!config.canvas) {\r\n            config.canvas = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        canvas.width = config.canvas.width || 320;\r\n        canvas.height = config.canvas.height || 240;\r\n\r\n        context = canvas.getContext('2d');\r\n\r\n        // setting defaults\r\n        if (config.video && config.video instanceof HTMLVideoElement) {\r\n            video = config.video.cloneNode();\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        } else {\r\n            video = document.createElement('video');\r\n\r\n            setSrcObject(mediaStream, video);\r\n\r\n            video.onloadedmetadata = function() { // \"onloadedmetadata\" may NOT work in FF?\r\n                if (config.initCallback) {\r\n                    config.initCallback();\r\n                }\r\n            };\r\n\r\n            video.width = config.video.width;\r\n            video.height = config.video.height;\r\n        }\r\n\r\n        video.muted = true;\r\n        video.play();\r\n\r\n        lastTime = new Date().getTime();\r\n        whammy = new Whammy.Video();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('canvas resolutions', canvas.width, '*', canvas.height);\r\n            console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\r\n        }\r\n\r\n        drawFrames(config.frameInterval);\r\n    };\r\n\r\n    /**\r\n     * Draw and push frames to Whammy\r\n     * @param {integer} frameInterval - set minimum interval (in milliseconds) between each time we push a frame to Whammy\r\n     */\r\n    function drawFrames(frameInterval) {\r\n        frameInterval = typeof frameInterval !== 'undefined' ? frameInterval : 10;\r\n\r\n        var duration = new Date().getTime() - lastTime;\r\n        if (!duration) {\r\n            return setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawFrames, 100);\r\n        }\r\n\r\n        // via #206, by Jack i.e. @Seymourr\r\n        lastTime = new Date().getTime();\r\n\r\n        if (video.paused) {\r\n            // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n            // Tweak for Android Chrome\r\n            video.play();\r\n        }\r\n\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        whammy.frames.push({\r\n            duration: duration,\r\n            image: canvas.toDataURL('image/webp')\r\n        });\r\n\r\n        if (!isStopDrawing) {\r\n            setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n    }\r\n\r\n    function asyncLoop(o) {\r\n        var i = -1,\r\n            length = o.length;\r\n\r\n        (function loop() {\r\n            i++;\r\n            if (i === length) {\r\n                o.callback();\r\n                return;\r\n            }\r\n\r\n            // \"setTimeout\" added by Jim McLeod\r\n            setTimeout(function() {\r\n                o.functionToLoop(loop, i);\r\n            }, 1);\r\n        })();\r\n    }\r\n\r\n\r\n    /**\r\n     * remove black frames from the beginning to the specified frame\r\n     * @param {Array} _frames - array of frames to be checked\r\n     * @param {number} _framesToCheck - number of frame until check will be executed (-1 - will drop all frames until frame not matched will be found)\r\n     * @param {number} _pixTolerance - 0 - very strict (only black pixel color) ; 1 - all\r\n     * @param {number} _frameTolerance - 0 - very strict (only black frame color) ; 1 - all\r\n     * @returns {Array} - array of frames\r\n     */\r\n    // pull#293 by @volodalexey\r\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance, callback) {\r\n        var localCanvas = document.createElement('canvas');\r\n        localCanvas.width = canvas.width;\r\n        localCanvas.height = canvas.height;\r\n        var context2d = localCanvas.getContext('2d');\r\n        var resultFrames = [];\r\n\r\n        var checkUntilNotBlack = _framesToCheck === -1;\r\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\r\n            _framesToCheck : _frames.length;\r\n        var sampleColor = {\r\n            r: 0,\r\n            g: 0,\r\n            b: 0\r\n        };\r\n        var maxColorDifference = Math.sqrt(\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2)\r\n        );\r\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\r\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\r\n        var doNotCheckNext = false;\r\n\r\n        asyncLoop({\r\n            length: endCheckFrame,\r\n            functionToLoop: function(loop, f) {\r\n                var matchPixCount, endPixCheck, maxPixCount;\r\n\r\n                var finishImage = function() {\r\n                    if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\r\n                        // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\r\n                    } else {\r\n                        // console.log('frame is passed : ' + f);\r\n                        if (checkUntilNotBlack) {\r\n                            doNotCheckNext = true;\r\n                        }\r\n                        resultFrames.push(_frames[f]);\r\n                    }\r\n                    loop();\r\n                };\r\n\r\n                if (!doNotCheckNext) {\r\n                    var image = new Image();\r\n                    image.onload = function() {\r\n                        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\r\n                        matchPixCount = 0;\r\n                        endPixCheck = imageData.data.length;\r\n                        maxPixCount = imageData.data.length / 4;\r\n\r\n                        for (var pix = 0; pix < endPixCheck; pix += 4) {\r\n                            var currentColor = {\r\n                                r: imageData.data[pix],\r\n                                g: imageData.data[pix + 1],\r\n                                b: imageData.data[pix + 2]\r\n                            };\r\n                            var colorDifference = Math.sqrt(\r\n                                Math.pow(currentColor.r - sampleColor.r, 2) +\r\n                                Math.pow(currentColor.g - sampleColor.g, 2) +\r\n                                Math.pow(currentColor.b - sampleColor.b, 2)\r\n                            );\r\n                            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\r\n                            if (colorDifference <= maxColorDifference * pixTolerance) {\r\n                                matchPixCount++;\r\n                            }\r\n                        }\r\n                        finishImage();\r\n                    };\r\n                    image.src = _frames[f].image;\r\n                } else {\r\n                    finishImage();\r\n                }\r\n            },\r\n            callback: function() {\r\n                resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\r\n\r\n                if (resultFrames.length <= 0) {\r\n                    // at least one last frame should be available for next manipulation\r\n                    // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\r\n                    resultFrames.push(_frames[_frames.length - 1]);\r\n                }\r\n                callback(resultFrames);\r\n            }\r\n        });\r\n    }\r\n\r\n    var isStopDrawing = false;\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        isStopDrawing = true;\r\n\r\n        var _this = this;\r\n        // analyse of all frames takes some time!\r\n        setTimeout(function() {\r\n            // e.g. dropBlackFrames(frames, 10, 1, 1) - will cut all 10 frames\r\n            // e.g. dropBlackFrames(frames, 10, 0.5, 0.5) - will analyse 10 frames\r\n            // e.g. dropBlackFrames(frames, 10) === dropBlackFrames(frames, 10, 0, 0) - will analyse 10 frames with strict black color\r\n            dropBlackFrames(whammy.frames, -1, null, null, function(frames) {\r\n                whammy.frames = frames;\r\n\r\n                // to display advertisement images!\r\n                if (config.advertisement && config.advertisement.length) {\r\n                    whammy.frames = config.advertisement.concat(whammy.frames);\r\n                }\r\n\r\n                /**\r\n                 * @property {Blob} blob - Recorded frames in video/webm blob.\r\n                 * @memberof WhammyRecorder\r\n                 * @example\r\n                 * recorder.stop(function() {\r\n                 *     var blob = recorder.blob;\r\n                 * });\r\n                 */\r\n                whammy.compile(function(blob) {\r\n                    _this.blob = blob;\r\n\r\n                    if (_this.blob.forEach) {\r\n                        _this.blob = new Blob([], {\r\n                            type: 'video/webm'\r\n                        });\r\n                    }\r\n\r\n                    if (callback) {\r\n                        callback(_this.blob);\r\n                    }\r\n                });\r\n            });\r\n        }, 10);\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (isStopDrawing) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (!isStopDrawing) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isStopDrawing = true;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'WhammyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    var video;\r\n    var lastTime;\r\n    var whammy;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WhammyRecorder = WhammyRecorder;\r\n}\n\r\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\r\n// _________\r\n// Whammy.js\r\n\r\n// todo: Firefox now supports webp for webm containers!\r\n// their MediaRecorder implementation works well!\r\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\r\n\r\n/**\r\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\r\n * @summary A real time javascript webm encoder based on a canvas hack.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\r\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\r\n * @typedef Whammy\r\n * @class\r\n * @example\r\n * var recorder = new Whammy().Video(15);\r\n * recorder.add(context || canvas || dataURL);\r\n * var output = recorder.compile();\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Whammy = (function() {\r\n    // a more abstract-ish API\r\n\r\n    function WhammyVideo(duration) {\r\n        this.frames = [];\r\n        this.duration = duration || 1;\r\n        this.quality = 0.8;\r\n    }\r\n\r\n    /**\r\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.add(canvas || context || 'image/webp');\r\n     * @param {string} frame - Canvas || Context || image/webp\r\n     * @param {number} duration - Stick a duration (in milliseconds)\r\n     */\r\n    WhammyVideo.prototype.add = function(frame, duration) {\r\n        if ('canvas' in frame) { //CanvasRenderingContext2D\r\n            frame = frame.canvas;\r\n        }\r\n\r\n        if ('toDataURL' in frame) {\r\n            frame = frame.toDataURL('image/webp', this.quality);\r\n        }\r\n\r\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\r\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\r\n        }\r\n        this.frames.push({\r\n            image: frame,\r\n            duration: duration || this.duration\r\n        });\r\n    };\r\n\r\n    function processInWebWorker(_function) {\r\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n            'this.onmessage =  function (e) {' + _function.name + '(e.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(blob);\r\n        URL.revokeObjectURL(blob);\r\n        return worker;\r\n    }\r\n\r\n    function whammyInWebWorker(frames) {\r\n        function ArrayToWebM(frames) {\r\n            var info = checkFrames(frames);\r\n            if (!info) {\r\n                return [];\r\n            }\r\n\r\n            var clusterMaxDuration = 30000;\r\n\r\n            var EBML = [{\r\n                'id': 0x1a45dfa3, // EBML\r\n                'data': [{\r\n                    'data': 1,\r\n                    'id': 0x4286 // EBMLVersion\r\n                }, {\r\n                    'data': 1,\r\n                    'id': 0x42f7 // EBMLReadVersion\r\n                }, {\r\n                    'data': 4,\r\n                    'id': 0x42f2 // EBMLMaxIDLength\r\n                }, {\r\n                    'data': 8,\r\n                    'id': 0x42f3 // EBMLMaxSizeLength\r\n                }, {\r\n                    'data': 'webm',\r\n                    'id': 0x4282 // DocType\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4287 // DocTypeVersion\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4285 // DocTypeReadVersion\r\n                }]\r\n            }, {\r\n                'id': 0x18538067, // Segment\r\n                'data': [{\r\n                    'id': 0x1549a966, // Info\r\n                    'data': [{\r\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\r\n                        'id': 0x2ad7b1 // TimecodeScale\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x4d80 // MuxingApp\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x5741 // WritingApp\r\n                    }, {\r\n                        'data': doubleToString(info.duration),\r\n                        'id': 0x4489 // Duration\r\n                    }]\r\n                }, {\r\n                    'id': 0x1654ae6b, // Tracks\r\n                    'data': [{\r\n                        'id': 0xae, // TrackEntry\r\n                        'data': [{\r\n                            'data': 1,\r\n                            'id': 0xd7 // TrackNumber\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x73c5 // TrackUID\r\n                        }, {\r\n                            'data': 0,\r\n                            'id': 0x9c // FlagLacing\r\n                        }, {\r\n                            'data': 'und',\r\n                            'id': 0x22b59c // Language\r\n                        }, {\r\n                            'data': 'V_VP8',\r\n                            'id': 0x86 // CodecID\r\n                        }, {\r\n                            'data': 'VP8',\r\n                            'id': 0x258688 // CodecName\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x83 // TrackType\r\n                        }, {\r\n                            'id': 0xe0, // Video\r\n                            'data': [{\r\n                                'data': info.width,\r\n                                'id': 0xb0 // PixelWidth\r\n                            }, {\r\n                                'data': info.height,\r\n                                'id': 0xba // PixelHeight\r\n                            }]\r\n                        }]\r\n                    }]\r\n                }]\r\n            }];\r\n\r\n            //Generate clusters (max duration)\r\n            var frameNumber = 0;\r\n            var clusterTimecode = 0;\r\n            while (frameNumber < frames.length) {\r\n\r\n                var clusterFrames = [];\r\n                var clusterDuration = 0;\r\n                do {\r\n                    clusterFrames.push(frames[frameNumber]);\r\n                    clusterDuration += frames[frameNumber].duration;\r\n                    frameNumber++;\r\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\r\n\r\n                var clusterCounter = 0;\r\n                var cluster = {\r\n                    'id': 0x1f43b675, // Cluster\r\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\r\n                }; //Add cluster to segment\r\n                EBML[1].data.push(cluster);\r\n                clusterTimecode += clusterDuration;\r\n            }\r\n\r\n            return generateEBML(EBML);\r\n        }\r\n\r\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\r\n            return [{\r\n                'data': clusterTimecode,\r\n                'id': 0xe7 // Timecode\r\n            }].concat(clusterFrames.map(function(webp) {\r\n                var block = makeSimpleBlock({\r\n                    discardable: 0,\r\n                    frame: webp.data.slice(4),\r\n                    invisible: 0,\r\n                    keyframe: 1,\r\n                    lacing: 0,\r\n                    trackNum: 1,\r\n                    timecode: Math.round(clusterCounter)\r\n                });\r\n                clusterCounter += webp.duration;\r\n                return {\r\n                    data: block,\r\n                    id: 0xa3\r\n                };\r\n            }));\r\n        }\r\n\r\n        // sums the lengths of all the frames and gets the duration\r\n\r\n        function checkFrames(frames) {\r\n            if (!frames[0]) {\r\n                postMessage({\r\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\r\n                });\r\n                return;\r\n            }\r\n\r\n            var width = frames[0].width,\r\n                height = frames[0].height,\r\n                duration = frames[0].duration;\r\n\r\n            for (var i = 1; i < frames.length; i++) {\r\n                duration += frames[i].duration;\r\n            }\r\n            return {\r\n                duration: duration,\r\n                width: width,\r\n                height: height\r\n            };\r\n        }\r\n\r\n        function numToBuffer(num) {\r\n            var parts = [];\r\n            while (num > 0) {\r\n                parts.push(num & 0xff);\r\n                num = num >> 8;\r\n            }\r\n            return new Uint8Array(parts.reverse());\r\n        }\r\n\r\n        function strToBuffer(str) {\r\n            return new Uint8Array(str.split('').map(function(e) {\r\n                return e.charCodeAt(0);\r\n            }));\r\n        }\r\n\r\n        function bitsToBuffer(bits) {\r\n            var data = [];\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data.push(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return new Uint8Array(data);\r\n        }\r\n\r\n        function generateEBML(json) {\r\n            var ebml = [];\r\n            for (var i = 0; i < json.length; i++) {\r\n                var data = json[i].data;\r\n\r\n                if (typeof data === 'object') {\r\n                    data = generateEBML(data);\r\n                }\r\n\r\n                if (typeof data === 'number') {\r\n                    data = bitsToBuffer(data.toString(2));\r\n                }\r\n\r\n                if (typeof data === 'string') {\r\n                    data = strToBuffer(data);\r\n                }\r\n\r\n                var len = data.size || data.byteLength || data.length;\r\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\r\n                var sizeToString = len.toString(2);\r\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\r\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\r\n\r\n                ebml.push(numToBuffer(json[i].id));\r\n                ebml.push(bitsToBuffer(size));\r\n                ebml.push(data);\r\n            }\r\n\r\n            return new Blob(ebml, {\r\n                type: 'video/webm'\r\n            });\r\n        }\r\n\r\n        function toBinStrOld(bits) {\r\n            var data = '';\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return data;\r\n        }\r\n\r\n        function makeSimpleBlock(data) {\r\n            var flags = 0;\r\n\r\n            if (data.keyframe) {\r\n                flags |= 128;\r\n            }\r\n\r\n            if (data.invisible) {\r\n                flags |= 8;\r\n            }\r\n\r\n            if (data.lacing) {\r\n                flags |= (data.lacing << 1);\r\n            }\r\n\r\n            if (data.discardable) {\r\n                flags |= 1;\r\n            }\r\n\r\n            if (data.trackNum > 127) {\r\n                throw 'TrackNumber > 127 not supported';\r\n            }\r\n\r\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).join('') + data.frame;\r\n\r\n            return out;\r\n        }\r\n\r\n        function parseWebP(riff) {\r\n            var VP8 = riff.RIFF[0].WEBP[0];\r\n\r\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\r\n            for (var i = 0, c = []; i < 4; i++) {\r\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\r\n            }\r\n\r\n            var width, height, tmp;\r\n\r\n            //the code below is literally copied verbatim from the bitstream spec\r\n            tmp = (c[1] << 8) | c[0];\r\n            width = tmp & 0x3FFF;\r\n            tmp = (c[3] << 8) | c[2];\r\n            height = tmp & 0x3FFF;\r\n            return {\r\n                width: width,\r\n                height: height,\r\n                data: VP8,\r\n                riff: riff\r\n            };\r\n        }\r\n\r\n        function getStrLength(string, offset) {\r\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\r\n                var unpadded = i.charCodeAt(0).toString(2);\r\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\r\n            }).join(''), 2);\r\n        }\r\n\r\n        function parseRIFF(string) {\r\n            var offset = 0;\r\n            var chunks = {};\r\n\r\n            while (offset < string.length) {\r\n                var id = string.substr(offset, 4);\r\n                var len = getStrLength(string, offset);\r\n                var data = string.substr(offset + 4 + 4, len);\r\n                offset += 4 + 4 + len;\r\n                chunks[id] = chunks[id] || [];\r\n\r\n                if (id === 'RIFF' || id === 'LIST') {\r\n                    chunks[id].push(parseRIFF(data));\r\n                } else {\r\n                    chunks[id].push(data);\r\n                }\r\n            }\r\n            return chunks;\r\n        }\r\n\r\n        function doubleToString(num) {\r\n            return [].slice.call(\r\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).reverse().join('');\r\n        }\r\n\r\n        var webm = new ArrayToWebM(frames.map(function(frame) {\r\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\r\n            webp.duration = frame.duration;\r\n            return webp;\r\n        }));\r\n\r\n        postMessage(webm);\r\n    }\r\n\r\n    /**\r\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.compile(function(blob) {\r\n     *    // blob.size - blob.type\r\n     * });\r\n     */\r\n    WhammyVideo.prototype.compile = function(callback) {\r\n        var webWorker = processInWebWorker(whammyInWebWorker);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            if (event.data.error) {\r\n                console.error(event.data.error);\r\n                return;\r\n            }\r\n            callback(event.data);\r\n        };\r\n\r\n        webWorker.postMessage(this.frames);\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * A more abstract-ish API.\r\n         * @method\r\n         * @memberof Whammy\r\n         * @example\r\n         * recorder = new Whammy().Video(0.8, 100);\r\n         * @param {?number} speed - 0.8\r\n         * @param {?number} quality - 100\r\n         */\r\n        Video: WhammyVideo\r\n    };\r\n})();\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Whammy = Whammy;\r\n}\n\r\n// ______________ (indexed-db)\r\n// DiskStorage.js\r\n\r\n/**\r\n * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\r\n * @summary Writing blobs into IndexedDB.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\r\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\r\n * @example\r\n * DiskStorage.Store({\r\n *     audioBlob: yourAudioBlob,\r\n *     videoBlob: yourVideoBlob,\r\n *     gifBlob  : yourGifBlob\r\n * });\r\n * DiskStorage.Fetch(function(dataURL, type) {\r\n *     if(type === 'audioBlob') { }\r\n *     if(type === 'videoBlob') { }\r\n *     if(type === 'gifBlob')   { }\r\n * });\r\n * // DiskStorage.dataStoreName = 'recordRTC';\r\n * // DiskStorage.onError = function(error) { };\r\n * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\r\n * @property {function} Store - This method stores blobs in IndexedDB.\r\n * @property {function} onError - This function is invoked for any known/unknown error.\r\n * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\n\r\nvar DiskStorage = {\r\n    /**\r\n     * This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.init();\r\n     */\r\n    init: function() {\r\n        var self = this;\r\n\r\n        if (typeof indexedDB === 'undefined' || typeof indexedDB.open === 'undefined') {\r\n            console.error('IndexedDB API are not available in this browser.');\r\n            return;\r\n        }\r\n\r\n        var dbVersion = 1;\r\n        var dbName = this.dbName || location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g, ''),\r\n            db;\r\n        var request = indexedDB.open(dbName, dbVersion);\r\n\r\n        function createObjectStore(dataBase) {\r\n            dataBase.createObjectStore(self.dataStoreName);\r\n        }\r\n\r\n        function putInDB() {\r\n            var transaction = db.transaction([self.dataStoreName], 'readwrite');\r\n\r\n            if (self.videoBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.videoBlob, 'videoBlob');\r\n            }\r\n\r\n            if (self.gifBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.gifBlob, 'gifBlob');\r\n            }\r\n\r\n            if (self.audioBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.audioBlob, 'audioBlob');\r\n            }\r\n\r\n            function getFromStore(portionName) {\r\n                transaction.objectStore(self.dataStoreName).get(portionName).onsuccess = function(event) {\r\n                    if (self.callback) {\r\n                        self.callback(event.target.result, portionName);\r\n                    }\r\n                };\r\n            }\r\n\r\n            getFromStore('audioBlob');\r\n            getFromStore('videoBlob');\r\n            getFromStore('gifBlob');\r\n        }\r\n\r\n        request.onerror = self.onError;\r\n\r\n        request.onsuccess = function() {\r\n            db = request.result;\r\n            db.onerror = self.onError;\r\n\r\n            if (db.setVersion) {\r\n                if (db.version !== dbVersion) {\r\n                    var setVersion = db.setVersion(dbVersion);\r\n                    setVersion.onsuccess = function() {\r\n                        createObjectStore(db);\r\n                        putInDB();\r\n                    };\r\n                } else {\r\n                    putInDB();\r\n                }\r\n            } else {\r\n                putInDB();\r\n            }\r\n        };\r\n        request.onupgradeneeded = function(event) {\r\n            createObjectStore(event.target.result);\r\n        };\r\n    },\r\n    /**\r\n     * This method fetches stored blobs from IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Fetch(function(dataURL, type) {\r\n     *     if(type === 'audioBlob') { }\r\n     *     if(type === 'videoBlob') { }\r\n     *     if(type === 'gifBlob')   { }\r\n     * });\r\n     */\r\n    Fetch: function(callback) {\r\n        this.callback = callback;\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This method stores blobs in IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Store({\r\n     *     audioBlob: yourAudioBlob,\r\n     *     videoBlob: yourVideoBlob,\r\n     *     gifBlob  : yourGifBlob\r\n     * });\r\n     */\r\n    Store: function(config) {\r\n        this.audioBlob = config.audioBlob;\r\n        this.videoBlob = config.videoBlob;\r\n        this.gifBlob = config.gifBlob;\r\n\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This function is invoked for any known/unknown error.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.onError = function(error){\r\n     *     alerot( JSON.stringify(error) );\r\n     * };\r\n     */\r\n    onError: function(error) {\r\n        console.error(JSON.stringify(error, null, '\\t'));\r\n    },\r\n\r\n    /**\r\n     * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.dataStoreName = 'recordRTC';\r\n     */\r\n    dataStoreName: 'recordRTC',\r\n    dbName: null\r\n};\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.DiskStorage = DiskStorage;\r\n}\n\r\n// ______________\r\n// GifRecorder.js\r\n\r\n/**\r\n * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\r\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\r\n * @typedef GifRecorder\r\n * @class\r\n * @example\r\n * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     img.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\r\n * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\r\n */\r\n\r\nfunction GifRecorder(mediaStream, config) {\r\n    if (typeof GIFEncoder === 'undefined') {\r\n        var script = document.createElement('script');\r\n        script.src = 'https://cdn.webrtc-experiment.com/gif-recorder.js';\r\n        (document.body || document.documentElement).appendChild(script);\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var isHTMLObject = mediaStream instanceof CanvasRenderingContext2D || mediaStream instanceof HTMLCanvasElement;\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (typeof GIFEncoder === 'undefined') {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isLoadedMetaData) {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isHTMLObject) {\r\n            if (!config.width) {\r\n                config.width = video.offsetWidth || 320;\r\n            }\r\n\r\n            if (!config.height) {\r\n                config.height = video.offsetHeight || 240;\r\n            }\r\n\r\n            if (!config.video) {\r\n                config.video = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            if (!config.canvas) {\r\n                config.canvas = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            canvas.width = config.canvas.width || 320;\r\n            canvas.height = config.canvas.height || 240;\r\n\r\n            video.width = config.video.width || 320;\r\n            video.height = config.video.height || 240;\r\n        }\r\n\r\n        // external library to record as GIF images\r\n        gifEncoder = new GIFEncoder();\r\n\r\n        // void setRepeat(int iter) \r\n        // Sets the number of times the set of GIF frames should be played. \r\n        // Default is 1; 0 means play indefinitely.\r\n        gifEncoder.setRepeat(0);\r\n\r\n        // void setFrameRate(Number fps) \r\n        // Sets frame rate in frames per second. \r\n        // Equivalent to setDelay(1000/fps).\r\n        // Using \"setDelay\" instead of \"setFrameRate\"\r\n        gifEncoder.setDelay(config.frameRate || 200);\r\n\r\n        // void setQuality(int quality) \r\n        // Sets quality of color quantization (conversion of images to the \r\n        // maximum 256 colors allowed by the GIF specification). \r\n        // Lower values (minimum = 1) produce better colors, \r\n        // but slow processing significantly. 10 is the default, \r\n        // and produces good color mapping at reasonable speeds. \r\n        // Values greater than 20 do not yield significant improvements in speed.\r\n        gifEncoder.setQuality(config.quality || 10);\r\n\r\n        // Boolean start() \r\n        // This writes the GIF Header and returns false if it fails.\r\n        gifEncoder.start();\r\n\r\n        if (typeof config.onGifRecordingStarted === 'function') {\r\n            config.onGifRecordingStarted();\r\n        }\r\n\r\n        startTime = Date.now();\r\n\r\n        function drawVideoFrame(time) {\r\n            if (self.clearedRecordedData === true) {\r\n                return;\r\n            }\r\n\r\n            if (isPausedRecording) {\r\n                return setTimeout(function() {\r\n                    drawVideoFrame(time);\r\n                }, 100);\r\n            }\r\n\r\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n            if (typeof lastFrameTime === undefined) {\r\n                lastFrameTime = time;\r\n            }\r\n\r\n            // ~10 fps\r\n            if (time - lastFrameTime < 90) {\r\n                return;\r\n            }\r\n\r\n            if (!isHTMLObject && video.paused) {\r\n                // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n                // Tweak for Android Chrome\r\n                video.play();\r\n            }\r\n\r\n            if (!isHTMLObject) {\r\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            if (config.onGifPreview) {\r\n                config.onGifPreview(canvas.toDataURL('image/png'));\r\n            }\r\n\r\n            gifEncoder.addFrame(context);\r\n            lastFrameTime = time;\r\n        }\r\n\r\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     img.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (lastAnimationFrame) {\r\n            cancelAnimationFrame(lastAnimationFrame);\r\n        }\r\n\r\n        endTime = Date.now();\r\n\r\n        /**\r\n         * @property {Blob} blob - The recorded blob object.\r\n         * @memberof GifRecorder\r\n         * @example\r\n         * recorder.stop(function(){\r\n         *     var blob = recorder.blob;\r\n         * });\r\n         */\r\n        this.blob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\r\n            type: 'image/gif'\r\n        });\r\n\r\n        callback(this.blob);\r\n\r\n        // bug: find a way to clear old recorded blobs\r\n        gifEncoder.stream().bin = [];\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        self.clearedRecordedData = true;\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        if (gifEncoder) {\r\n            gifEncoder.stream().bin = [];\r\n        }\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'GifRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    if (isHTMLObject) {\r\n        if (mediaStream instanceof CanvasRenderingContext2D) {\r\n            context = mediaStream;\r\n            canvas = context.canvas;\r\n        } else if (mediaStream instanceof HTMLCanvasElement) {\r\n            context = mediaStream.getContext('2d');\r\n            canvas = mediaStream;\r\n        }\r\n    }\r\n\r\n    var isLoadedMetaData = true;\r\n\r\n    if (!isHTMLObject) {\r\n        var video = document.createElement('video');\r\n        video.muted = true;\r\n        video.autoplay = true;\r\n\r\n        isLoadedMetaData = false;\r\n        video.onloadedmetadata = function() {\r\n            isLoadedMetaData = true;\r\n        };\r\n\r\n        setSrcObject(mediaStream, video);\r\n\r\n        video.play();\r\n    }\r\n\r\n    var lastAnimationFrame = null;\r\n    var startTime, endTime, lastFrameTime;\r\n\r\n    var gifEncoder;\r\n\r\n    var self = this;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.GifRecorder = GifRecorder;\r\n}\n\r\n// Last time updated: 2017-09-26 7:19:00 AM UTC\r\n\r\n// ________________________\r\n// MultiStreamsMixer v1.0.3\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/MultiStreamsMixer\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\nfunction MultiStreamsMixer(arrayOfMediaStreams) {\r\n\r\n    // requires: chrome://flags/#enable-experimental-web-platform-features\r\n\r\n    var videos = [];\r\n    var isStopDrawingFrames = false;\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n    canvas.style = 'opacity:0;position:absolute;z-index:-1;top: -100000000;left:-1000000000; margin-top:-1000000000;margin-left:-1000000000;';\r\n    (document.body || document.documentElement).appendChild(canvas);\r\n\r\n    this.disableLogs = false;\r\n    this.frameInterval = 10;\r\n\r\n    this.width = 360;\r\n    this.height = 240;\r\n\r\n    // use gain node to prevent echo\r\n    this.useGainNode = true;\r\n\r\n    var self = this;\r\n\r\n    // _____________________________\r\n    // Cross-Browser-Declarations.js\r\n\r\n    // WebAudio API representer\r\n    var AudioContext = window.AudioContext;\r\n\r\n    if (typeof AudioContext === 'undefined') {\r\n        if (typeof webkitAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = webkitAudioContext;\r\n        }\r\n\r\n        if (typeof mozAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = mozAudioContext;\r\n        }\r\n    }\r\n\r\n    /*jshint -W079 */\r\n    var URL = window.URL;\r\n\r\n    if (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n        /*global URL:true */\r\n        URL = webkitURL;\r\n    }\r\n\r\n    if (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n        if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n        }\r\n\r\n        if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.mozGetUserMedia;\r\n        }\r\n    }\r\n\r\n    var MediaStream = window.MediaStream;\r\n\r\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n        MediaStream = webkitMediaStream;\r\n    }\r\n\r\n    /*global MediaStream:true */\r\n    if (typeof MediaStream !== 'undefined') {\r\n        if (!('getVideoTracks' in MediaStream.prototype)) {\r\n            MediaStream.prototype.getVideoTracks = function() {\r\n                if (!this.getTracks) {\r\n                    return [];\r\n                }\r\n\r\n                var tracks = [];\r\n                this.getTracks.forEach(function(track) {\r\n                    if (track.kind.toString().indexOf('video') !== -1) {\r\n                        tracks.push(track);\r\n                    }\r\n                });\r\n                return tracks;\r\n            };\r\n\r\n            MediaStream.prototype.getAudioTracks = function() {\r\n                if (!this.getTracks) {\r\n                    return [];\r\n                }\r\n\r\n                var tracks = [];\r\n                this.getTracks.forEach(function(track) {\r\n                    if (track.kind.toString().indexOf('audio') !== -1) {\r\n                        tracks.push(track);\r\n                    }\r\n                });\r\n                return tracks;\r\n            };\r\n        }\r\n\r\n        // override \"stop\" method for all browsers\r\n        if (typeof MediaStream.prototype.stop === 'undefined') {\r\n            MediaStream.prototype.stop = function() {\r\n                this.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    var Storage = {};\r\n\r\n    if (typeof AudioContext !== 'undefined') {\r\n        Storage.AudioContext = AudioContext;\r\n    } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Storage.AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    function setSrcObject(stream, element, ignoreCreateObjectURL) {\r\n        if ('createObjectURL' in URL && !ignoreCreateObjectURL) {\r\n            try {\r\n                element.src = URL.createObjectURL(stream);\r\n            } catch (e) {\r\n                setSrcObject(stream, element, true);\r\n                return;\r\n            }\r\n        } else if ('srcObject' in element) {\r\n            element.srcObject = stream;\r\n        } else if ('mozSrcObject' in element) {\r\n            element.mozSrcObject = stream;\r\n        } else {\r\n            alert('createObjectURL/srcObject both are not supported.');\r\n        }\r\n    }\r\n\r\n    this.startDrawingFrames = function() {\r\n        drawVideosToCanvas();\r\n    };\r\n\r\n    function drawVideosToCanvas() {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var videosLength = videos.length;\r\n\r\n        var fullcanvas = false;\r\n        var remaining = [];\r\n        videos.forEach(function(video) {\r\n            if (!video.stream) {\r\n                video.stream = {};\r\n            }\r\n\r\n            if (video.stream.fullcanvas) {\r\n                fullcanvas = video;\r\n            } else {\r\n                remaining.push(video);\r\n            }\r\n        });\r\n\r\n        if (fullcanvas) {\r\n            canvas.width = fullcanvas.stream.width;\r\n            canvas.height = fullcanvas.stream.height;\r\n        } else if (remaining.length) {\r\n            canvas.width = videosLength > 1 ? remaining[0].width * 2 : remaining[0].width;\r\n\r\n            var height = 1;\r\n            if (videosLength === 3 || videosLength === 4) {\r\n                height = 2;\r\n            }\r\n            if (videosLength === 5 || videosLength === 6) {\r\n                height = 3;\r\n            }\r\n            if (videosLength === 7 || videosLength === 8) {\r\n                height = 4;\r\n            }\r\n            if (videosLength === 9 || videosLength === 10) {\r\n                height = 5;\r\n            }\r\n            canvas.height = remaining[0].height * height;\r\n        } else {\r\n            canvas.width = self.width || 360;\r\n            canvas.height = self.height || 240;\r\n        }\r\n\r\n        if (fullcanvas && fullcanvas instanceof HTMLVideoElement) {\r\n            drawImage(fullcanvas);\r\n        }\r\n\r\n        remaining.forEach(function(video, idx) {\r\n            drawImage(video, idx);\r\n        });\r\n\r\n        setTimeout(drawVideosToCanvas, self.frameInterval);\r\n    }\r\n\r\n    function drawImage(video, idx) {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var x = 0;\r\n        var y = 0;\r\n        var width = video.width;\r\n        var height = video.height;\r\n\r\n        if (idx === 1) {\r\n            x = video.width;\r\n        }\r\n\r\n        if (idx === 2) {\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 3) {\r\n            x = video.width;\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 4) {\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 5) {\r\n            x = video.width;\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 6) {\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (idx === 7) {\r\n            x = video.width;\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (typeof video.stream.left !== 'undefined') {\r\n            x = video.stream.left;\r\n        }\r\n\r\n        if (typeof video.stream.top !== 'undefined') {\r\n            y = video.stream.top;\r\n        }\r\n\r\n        if (typeof video.stream.width !== 'undefined') {\r\n            width = video.stream.width;\r\n        }\r\n\r\n        if (typeof video.stream.height !== 'undefined') {\r\n            height = video.stream.height;\r\n        }\r\n\r\n        context.drawImage(video, x, y, width, height);\r\n\r\n        if (typeof video.stream.onRender === 'function') {\r\n            video.stream.onRender(context, x, y, width, height, idx);\r\n        }\r\n    }\r\n\r\n    function getMixedStream() {\r\n        isStopDrawingFrames = false;\r\n        var mixedVideoStream = getMixedVideoStream();\r\n\r\n        var mixedAudioStream = getMixedAudioStream();\r\n        if (mixedAudioStream) {\r\n            mixedAudioStream.getAudioTracks().forEach(function(track) {\r\n                mixedVideoStream.addTrack(track);\r\n            });\r\n        }\r\n\r\n        var fullcanvas;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (stream.fullcanvas) {\r\n                fullcanvas = true;\r\n            }\r\n        });\r\n\r\n        return mixedVideoStream;\r\n    }\r\n\r\n    function getMixedVideoStream() {\r\n        resetVideoStreams();\r\n\r\n        var capturedStream;\r\n\r\n        if ('captureStream' in canvas) {\r\n            capturedStream = canvas.captureStream();\r\n        } else if ('mozCaptureStream' in canvas) {\r\n            capturedStream = canvas.mozCaptureStream();\r\n        } else if (!self.disableLogs) {\r\n            console.error('Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features');\r\n        }\r\n\r\n        var videoStream = new MediaStream();\r\n\r\n        capturedStream.getVideoTracks().forEach(function(track) {\r\n            videoStream.addTrack(track);\r\n        });\r\n\r\n        canvas.stream = videoStream;\r\n\r\n        return videoStream;\r\n    }\r\n\r\n    function getMixedAudioStream() {\r\n        // via: @pehrsons\r\n        if (!Storage.AudioContextConstructor) {\r\n            Storage.AudioContextConstructor = new Storage.AudioContext();\r\n        }\r\n\r\n        self.audioContext = Storage.AudioContextConstructor;\r\n\r\n        self.audioSources = [];\r\n\r\n        if (self.useGainNode === true) {\r\n            self.gainNode = self.audioContext.createGain();\r\n            self.gainNode.connect(self.audioContext.destination);\r\n            self.gainNode.gain.value = 0; // don't hear self\r\n        }\r\n\r\n        var audioTracksLength = 0;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (!stream.getAudioTracks().length) {\r\n                return;\r\n            }\r\n\r\n            audioTracksLength++;\r\n\r\n            var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n\r\n            if (self.useGainNode === true) {\r\n                audioSource.connect(self.gainNode);\r\n            }\r\n\r\n            self.audioSources.push(audioSource);\r\n        });\r\n\r\n        if (!audioTracksLength) {\r\n            return;\r\n        }\r\n\r\n        self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n        self.audioSources.forEach(function(audioSource) {\r\n            audioSource.connect(self.audioDestination);\r\n        });\r\n        return self.audioDestination.stream;\r\n    }\r\n\r\n    function getVideo(stream) {\r\n        var video = document.createElement('video');\r\n\r\n        setSrcObject(stream, video);\r\n\r\n        video.muted = true;\r\n        video.volume = 0;\r\n\r\n        video.width = stream.width || self.width || 360;\r\n        video.height = stream.height || self.height || 240;\r\n\r\n        video.play();\r\n\r\n        return video;\r\n    }\r\n\r\n    this.appendStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        arrayOfMediaStreams.concat(streams);\r\n\r\n        streams.forEach(function(stream) {\r\n            if (stream.getVideoTracks().length) {\r\n                var video = getVideo(stream);\r\n                video.stream = stream;\r\n                videos.push(video);\r\n            }\r\n\r\n            if (stream.getAudioTracks().length && self.audioContext) {\r\n                var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n                audioSource.connect(self.audioDestination);\r\n                self.audioSources.push(audioSource);\r\n            }\r\n        });\r\n    };\r\n\r\n    this.releaseStreams = function() {\r\n        videos = [];\r\n        isStopDrawingFrames = true;\r\n\r\n        if (self.gainNode) {\r\n            self.gainNode.disconnect();\r\n            self.gainNode = null;\r\n        }\r\n\r\n        if (self.audioSources.length) {\r\n            self.audioSources.forEach(function(source) {\r\n                source.disconnect();\r\n            });\r\n            self.audioSources = [];\r\n        }\r\n\r\n        if (self.audioDestination) {\r\n            self.audioDestination.disconnect();\r\n            self.audioDestination = null;\r\n        }\r\n\r\n        self.audioContext = null;\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (canvas.stream) {\r\n            canvas.stream.stop();\r\n            canvas.stream = null;\r\n        }\r\n    };\r\n\r\n    this.resetVideoStreams = function(streams) {\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        resetVideoStreams(streams);\r\n    };\r\n\r\n    function resetVideoStreams(streams) {\r\n        videos = [];\r\n        streams = streams || arrayOfMediaStreams;\r\n\r\n        // via: @adrian-ber\r\n        streams.forEach(function(stream) {\r\n            if (!stream.getVideoTracks().length) {\r\n                return;\r\n            }\r\n\r\n            var video = getVideo(stream);\r\n            video.stream = stream;\r\n            videos.push(video);\r\n        });\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamsMixer';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    this.getMixedStream = getMixedStream;\r\n\r\n}\n\r\n// ______________________\r\n// MultiStreamRecorder.js\r\n\r\n/*\r\n * Video conference recording, using captureStream API along with WebAudio and Canvas2D API.\r\n */\r\n\r\n/**\r\n * MultiStreamRecorder can record multiple videos in single container.\r\n * @summary Multi-videos recorder.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\r\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\r\n * @typedef MultiStreamRecorder\r\n * @class\r\n * @example\r\n * var options = {\r\n *     mimeType: 'video/webm'\r\n * }\r\n * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStreams} mediaStreams - Array of MediaStreams.\r\n * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: \"video/webm\"}\r\n */\r\n\r\nfunction MultiStreamRecorder(arrayOfMediaStreams, options) {\r\n    arrayOfMediaStreams = arrayOfMediaStreams || [];\r\n    var self = this;\r\n\r\n    var mixer;\r\n    var mediaRecorder;\r\n\r\n    options = options || {\r\n        mimeType: 'video/webm',\r\n        video: {\r\n            width: 360,\r\n            height: 240\r\n        }\r\n    };\r\n\r\n    if (!options.frameInterval) {\r\n        options.frameInterval = 10;\r\n    }\r\n\r\n    if (!options.video) {\r\n        options.video = {};\r\n    }\r\n\r\n    if (!options.video.width) {\r\n        options.video.width = 360;\r\n    }\r\n\r\n    if (!options.video.height) {\r\n        options.video.height = 240;\r\n    }\r\n\r\n    /**\r\n     * This method records all MediaStreams.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // github/muaz-khan/MultiStreamsMixer\r\n        mixer = new MultiStreamsMixer(arrayOfMediaStreams);\r\n\r\n        if (getVideoTracks().length) {\r\n            mixer.frameInterval = options.frameInterval || 10;\r\n            mixer.width = options.video.width || 360;\r\n            mixer.height = options.video.height || 240;\r\n            mixer.startDrawingFrames();\r\n        }\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n\r\n        // record using MediaRecorder API\r\n        mediaRecorder = new MediaStreamRecorder(mixer.getMixedStream(), options);\r\n        mediaRecorder.record();\r\n    };\r\n\r\n    function getVideoTracks() {\r\n        var tracks = [];\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            stream.getVideoTracks().forEach(function(track) {\r\n                tracks.push(track);\r\n            });\r\n        });\r\n        return tracks;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        mediaRecorder.stop(function(blob) {\r\n            self.blob = blob;\r\n\r\n            callback(blob);\r\n\r\n            self.clearRecordedData();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (mixer) {\r\n            mixer.releaseStreams();\r\n            mixer = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add extra media-streams to existing recordings.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.addStreams([newAudioStream, newVideoStream]);\r\n     */\r\n    this.addStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        arrayOfMediaStreams.concat(streams);\r\n\r\n        if (!mediaRecorder || !mixer) {\r\n            return;\r\n        }\r\n\r\n        mixer.appendStreams(streams);\r\n    };\r\n\r\n    /**\r\n     * Reset videos during live recording. Replace old videos e.g. replace cameras with full-screen.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.resetVideoStreams([newVideo1, newVideo2]);\r\n     */\r\n    this.resetVideoStreams = function(streams) {\r\n        if (!mixer) {\r\n            return;\r\n        }\r\n\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        mixer.resetVideoStreams(streams);\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MultiStreamRecorder = MultiStreamRecorder;\r\n}\n\r\n// _____________________\r\n// RecordRTC.promises.js\r\n\r\n/**\r\n * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}\r\n * @summary Promises for {@link RecordRTC}\r\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\r\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCPromisesHandler\r\n * @class\r\n * @example\r\n * var recorder = new RecordRTCPromisesHandler(mediaStream, options);\r\n * recorder.startRecording()\r\n *         .then(successCB)\r\n *         .catch(errorCB);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n * @throws Will throw an error if \"new\" keyword is not used to initiate \"RecordRTCPromisesHandler\". Also throws error if first argument \"MediaStream\" is missing.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction RecordRTCPromisesHandler(mediaStream, options) {\r\n    if (!this) {\r\n        throw 'Use \"new RecordRTCPromisesHandler()\"';\r\n    }\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    var self = this;\r\n\r\n    /**\r\n     * @property {Blob} blob - Access/reach the native {@link RecordRTC} object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * var internal = recorder.recordRTC.getInternalRecorder();\r\n     * alert(internal instanceof MediaStreamRecorder);\r\n     */\r\n    self.recordRTC = new RecordRTC(mediaStream, options);\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.startRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.startRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.startRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method stops the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     var blob = recorder.getBlob();\r\n     * }).catch(errorCB);\r\n     */\r\n    this.stopRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.stopRecording(function(url) {\r\n                    self.blob = self.recordRTC.getBlob();\r\n                    resolve(url);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns data-url for the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getDataURL().then(function(dataURL) {\r\n     *         window.open(dataURL);\r\n     *     }).catch(errorCB);;\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.getDataURL(function(dataURL) {\r\n                    resolve(dataURL);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     var blob = recorder.getBlob();\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getBlob = function() {\r\n        return self.recordRTC.getBlob();\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     var blob = recorder.getBlob();\r\n     * }).catch(errorCB);\r\n     */\r\n    this.blob = null;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.RecordRTCPromisesHandler = RecordRTCPromisesHandler;\r\n}\n","'use strict';\n\nfunction find(array, predicate, context) {\n  if (typeof Array.prototype.find === 'function') {\n    return array.find(predicate, context);\n  }\n\n  context = context || this;\n  var length = array.length;\n  var i;\n\n  if (typeof predicate !== 'function') {\n    throw new TypeError(predicate + ' is not a function');\n  }\n\n  for (i = 0; i < length; i++) {\n    if (predicate.call(context, array[i], i, array)) {\n      return array[i];\n    }\n  }\n}\n\nmodule.exports = find;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity]\n *  The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = findIndex;\n","import RecordRTC from \"recordrtc\";\nimport electron, { desktopCapturer } from \"electron\";\nimport find from \"array-find\";\nimport findIndex from \"lodash.findindex\";\n\n/* This is NEEDED because RecordRTC is badly written */\nglobal.html2canvas = (canvas, obj) => {\n  obj.onrendered(canvas);\n};\n\nconst getStream = sourceId => {\n  return new Promise((resolve, reject) => {\n    desktopCapturer.getSources({ types: [\"screen\"] }, (error, sources) => {\n      if (error) {\n        reject(error);\n        return;\n      }\n\n      const display = getDisplay(sourceId);\n      const displayIndex = findIndex(\n        electron.screen.getAllDisplays(),\n        item => item.id == sourceId\n      );\n\n      navigator.webkitGetUserMedia(\n        {\n          audio: false,\n          video: {\n            mandatory: {\n              chromeMediaSource: \"desktop\",\n              chromeMediaSourceId: sources[displayIndex].id,\n              maxWidth: display.size.width,\n              maxHeight: display.size.height,\n              minWidth: display.size.width,\n              minHeight: display.size.height\n            }\n          }\n        },\n        resolve,\n        reject\n      );\n    });\n  });\n};\n\nconst getVideo = stream => {\n  const video = document.createElement(\"video\");\n  video.autoplay = true;\n  video.src = URL.createObjectURL(stream);\n  return new Promise(resolve => {\n    video.addEventListener(\"playing\", () => {\n      resolve(video);\n    });\n  });\n};\n\nconst getCanvas = (width, height) => {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n};\n\nconst drawFrame = ({\n  ctx,\n  video,\n  x,\n  y,\n  width,\n  height,\n  availTop = screen.availTop\n}) => {\n  ctx.drawImage(video, x, y, width, height, 0, -availTop, width, height);\n};\n\nconst getFrameImage = canvas => {\n  return canvas.toDataURL();\n};\n\nconst getDisplay = id => {\n  const x = find(electron.screen.getAllDisplays(), item => {\n    console.log(item.id, id);\n    return item.id == id;\n  });\n\n  return x;\n};\n\nconst getLoop = fn => {\n  let requestId;\n  const callFn = () => {\n    requestId = requestAnimationFrame(callFn);\n    fn();\n  };\n  callFn();\n  return () => {\n    cancelAnimationFrame(requestId);\n  };\n};\n\nconst startRecording = ({ canvas, video, x, y, width, height, availTop }) => {\n  const recorder = RecordRTC(canvas, { type: \"canvas\" });\n  const ctx = canvas.getContext(\"2d\");\n  const stopLoop = getLoop(() =>\n    drawFrame({ ctx, video, x, y, width, height, availTop })\n  );\n\n  recorder.startRecording();\n\n  return {\n    stop() {\n      return new Promise(resolve => {\n        stopLoop();\n        recorder.stopRecording(() => {\n          recorder.getDataURL(url => resolve({ url, width, height }));\n        });\n      });\n    },\n    pause() {\n      recorder.pauseRecording();\n    },\n    resume() {\n      recorder.resumeRecording();\n    }\n  };\n};\n\nexport const takeScreenshot = ({ x, y, width, height, sourceId }) => {\n  //const availTop = screen.availTop - getDisplay(sourceId).bounds.y;\n\n  const display = getDisplay(sourceId);\n\n  if (typeof x == \"undefined\") x = display.bounds.x;\n  if (typeof y == \"undefined\") y = display.bounds.y;\n  if (typeof width == \"undefined\") width = display.bounds.width;\n  if (typeof height == \"undefined\") height = display.bounds.height;\n\n  const availTop = 0;\n\n  return getStream(sourceId)\n    .then(getVideo)\n    .then(video => {\n      const canvas = getCanvas(width, height);\n      const ctx = canvas.getContext(\"2d\");\n      drawFrame({ ctx, video, x, y, width, height, availTop });\n      return getFrameImage(canvas);\n    });\n};\n\nexport const captureVideo = ({ x, y, width, height, sourceId }) => {\n  const availTop = screen.availTop - getDisplay(sourceId).bounds.y;\n  return getStream(sourceId)\n    .then(getVideo)\n    .then(video => {\n      const canvas = getCanvas(width, height);\n      return startRecording({ canvas, video, x, y, width, height, availTop });\n    });\n};\n","\n\nconst { remote } = require(\"electron\");\n// var robot = require (\"robot-js\");\nconst ipcMain = require('electron').ipcMain;\nconst { BrowserWindow } = remote;\nconst path = require('path')\nconst url = require('url');\nconst ipc = require('electron').ipcRenderer;\n// const ipcMain = require('electron').ipcMain;\nconst { desktopCapturer } = require(\"electron\");\nimport { takeScreenshot } from \"./screencapture\";\nconsole.log(ipcMain, 'ipc');\n\nlet win;\npick = function () {\n  return new Promise((resolve, reject) => {\n\n    desktopCapturer.getSources({ types: [\"screen\"] }, (error, sources) => {\n      if (error) throw error;\n\n      takeScreenshot({\n        sourceId: sources[0].id.replace(\"screen:\", \"\")\n      }).then(result => {\n          win = new BrowserWindow({\n            transparent: true,\n            frame: false,\n            toolbar: true,\n          });\n          win.setSimpleFullScreen(true);\n          win.show();\n          win.loadURL(path.join('file://', process.cwd(), 'src/screenshot.html'));\n          win.webContents.on('did-finish-load', () => {\n            win.webContents.send('screenshot', result)\n          });\n        });\n    });\n    // win.on('closed', () => {\n    //   win = null\n    // })\n    ipc.on('clickedPixels', (event, message) => {\n      const pixels = JSON.parse(message).data;\n      console.log(pixels, 'pixels selected');\n      let rgbBox = document.getElementById('rgb-color-box');\n      let rgbValues = document.getElementById('rgb-values');\n      rgbValues.innerHTML = `rgba(${pixels[0]},${pixels[1]}, ${pixels[2]}, ${pixels[3]})`\n      rgbBox.style.display = \"inline-block\";\n      rgbBox.style.backgroundColor = `rgba(${pixels[0]},${pixels[1]}, ${pixels[2]}, ${pixels[3]})`;\n      resolve(pixels);\n    });\n\n  });\n}\nexport default pick;\n","\n  const ipc = require('electron').ipcMain;\n\n  ipcMainHandler = function (win) {\n    ipc.on('clickedPixels', (event, message) => {\n      win.webContents.send('clickedPixels', JSON.stringify(message));\n    })\n  };\n\nexport default ipcMainHandler;\n\n","import pick from './pick';\nimport ipcMainHandler from './ipcMainHandler';\n\n// console.log(pick, ipcMainHandler);\n// exports.pick = pick;\n// exports.ipcMainHandler = ipcMainHandler;\nmodule.exports = {\n  pick,\n  ipcMainHandler\n}\n"],"names":["RecordRTC","mediaStream","config","RecordRTCConfiguration","type","self","this","initRecorder","initCallback","Recorder","recorder","isChrome","isEdge","isOpera","StereoAudioRecorder","MediaRecorder","prototype","MediaStreamRecorder","WhammyRecorder","GifRecorder","CanvasRecorder","isMediaRecorderCompatible","getVideoTracks","length","getAudioTracks","isTypeSupported","recorderType","Array","MultiStreamRecorder","disableLogs","name","console","log","constructor","mediaRecorder","record","setState","stopRecording","callback","state","resumeRecording","setTimeout","warn","stop","_callback","warningLog","__blob","Object","keys","forEach","key","blob","bytesToSize","size","url","URL","createObjectURL","call","autoWriteToDisk","getDataURL","dataURL","parameter","DiskStorage","Store","readFile","_blob","postMessage","FileReaderSync","readAsDataURL","_mediaRecorder","Worker","navigator","mozGetUserMedia","reader","FileReader","onload","event","target","result","webWorker","_function","Blob","toString","worker","revokeObjectURL","processInWebWorker","onmessage","data","handleRecordingDuration","counter","recordingDuration","onRecordingStopped","onStateChanged","WARNING","returnObject","startRecording","config2","clearRecordedData","pauseRecording","pause","resume","setRecordingDuration","getBlob","toURL","getInternalRecorder","save","fileName","file","e","fileExtension","split","indexOf","splitted","fileFullName","Math","round","random","msSaveOrOpenBlob","msSaveBlob","hyperlink","document","createElement","href","download","style","body","documentElement","appendChild","click","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","invokeSaveAsDialog","getFromDisk","setAdvertisementArray","arrayOfWebPImages","advertisement","i","push","duration","image","bufferSize","sampleRate","buffer","reset","getState","destroy","Storage","AudioContextConstructor","close","version","prop","audio","video","mimeType","MRecordRTC","addStream","_mediaStream","mediaType","gif","audioRecorder","numberOfAudioChannels","timeSlice","onTimeStamp","newStream","videoTrack","MediaStream","addTrack","videoRecorder","canvas","frameInterval","gifRecorder","frameRate","quality","blobURL","output","callback00","webkitURL","_audioDataURL","_videoDataURL","writeToDisk","args","module","Fetch","_type","replace","options","audioDataURL","videoDataURL","gifDataURL","audioBlob","videoBlob","gifBlob","that","global","userAgent","getUserMedia","error","arguments","captureStream","mozCaptureStream","obj","getContext","play","drawImage","toDataURL","HTMLVideoElement","location","protocol","hash","screen","width","height","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","lastTime","element","currTime","Date","getTime","timeToCall","max","id","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","AudioContext","webkitAudioContext","mozAudioContext","webkitGetUserMedia","opera","isSafari","toLowerCase","isElectron","bytes","parseInt","floor","pow","toPrecision","process","versions","electron","setSrcObject","stream","ignoreCreateObjectURL","src","srcObject","mozSrcObject","alert","webkitMediaStream","getTracks","tracks","track","kind","chrome","InstallTrigger","verOffset","ix","nAgt","fullVersion","parseFloat","appVersion","majorVersion","substring","isNaN","arrayOfBlobs","updateTimeStamp","timestamps","getMimeType","secondObject","clearRecordedDataCB","getArrayOfBlobs","allStates","recorderHints","canRecordMimeType","ignoreMutedMedia","ondataavailable","recordingCallback","getNativeBlob","onstart","onpause","onresume","onstop","onerror","looper","manuallyStopped","timeslice","start","getAllStates","checkForInactiveTracks","active","ended","isMediaStreamActive","jsAudioNode","leftchannel","rightchannel","recording","recordingLength","desiredSampRate","mergeLeftRightBuffers","mergeAudioBuffers","cb","interleaved","leftBuffers","slice","rightBuffers","internalInterleavedLength","interpolateArray","newSampleRate","oldSampleRate","fitCount","newData","springFactor","Number","tmp","before","toFixed","after","ceil","linearInterpolate","atPoint","mergeBuffers","channelBuffer","rLength","Float64Array","offset","lng","set","writeUTFBytes","string","setUint8","charCodeAt","leftChannel","rightChannel","inputIndex","index","interleave","interleavedLength","ArrayBuffer","DataView","setUint32","setUint16","setInt16","noWorker","workerURL","resetVariables","isAudioProcessStarted","isPaused","byteLength","context","audioInput","createMediaStreamSource","legalBufferValues","JSON","stringify","createJavaScriptNode","createScriptProcessor","connect","intervalsBasedBuffers","left","right","onaudioprocess","disconnect","onAudioProcessStarted","inputBuffer","getChannelData","chLeft","Float32Array","chRight","destination","htmlElement","html2canvas","isCanvasSupportsStreamCapturing","item","globalCanvas","mediaStreamRecorder","isRecording","_isChrome","webkitRTCPeerConnection","chromeVersion","matchArray","match","HTMLCanvasElement","CanvasRenderingContext2D","useWhammyRecorder","canvasMediaStream","webkitCaptureStream","mdStream","whammy","frames","drawCanvasFrame","getWebPImages","nodeName","framesLength","frame","idx","framesRemaining","onEncodingCallback","webp","compile","isPausedRecording","newCanvas","grabMouse","showMousePointer","onrendered","Whammy","Video","drawFrames","paused","isStopDrawing","dropBlackFrames","_frames","_framesToCheck","_pixTolerance","_frameTolerance","localCanvas","o","context2d","resultFrames","checkUntilNotBlack","endCheckFrame","sampleColor","maxColorDifference","sqrt","pixTolerance","frameTolerance","doNotCheckNext","functionToLoop","loop","f","matchPixCount","endPixCheck","maxPixCount","finishImage","Image","imageData","getImageData","pix","currentColor","r","g","b","concat","cloneNode","onloadedmetadata","muted","_this","WhammyVideo","whammyInWebWorker","getClusterData","clusterTimecode","clusterCounter","clusterFrames","map","block","flags","keyframe","invisible","lacing","discardable","trackNum","timecode","String","fromCharCode","join","makeSimpleBlock","numToBuffer","num","parts","Uint8Array","reverse","bitsToBuffer","bits","substr","getStrLength","unpadded","webm","info","checkFrames","EBML","frameNumber","clusterDuration","cluster","generateEBML","json","ebml","len","zeroes","sizeToString","padded","riff","VP8","RIFF","WEBP","frameStart","c","parseWebP","parseRIFF","chunks","atob","add","test","init","indexedDB","open","db","dbName","request","onError","onsuccess","setVersion","createObjectStore","putInDB","onupgradeneeded","dataBase","dataStoreName","transaction","getFromStore","portionName","objectStore","get","put","GIFEncoder","script","isHTMLObject","isLoadedMetaData","offsetWidth","offsetHeight","gifEncoder","setRepeat","setDelay","setQuality","onGifRecordingStarted","lastAnimationFrame","drawVideoFrame","time","clearedRecordedData","undefined","lastFrameTime","onGifPreview","addFrame","bin","autoplay","MultiStreamsMixer","arrayOfMediaStreams","videos","isStopDrawingFrames","useGainNode","drawVideosToCanvas","videosLength","fullcanvas","remaining","x","y","top","onRender","getVideo","volume","resetVideoStreams","streams","startDrawingFrames","appendStreams","audioContext","audioSource","audioDestination","audioSources","releaseStreams","gainNode","source","clearRect","getMixedStream","mixedVideoStream","capturedStream","videoStream","getMixedVideoStream","mixedAudioStream","createGain","gain","value","audioTracksLength","createMediaStreamDestination","getMixedAudioStream","mixer","previewStream","addStreams","RecordRTCPromisesHandler","recordRTC","Promise","resolve","reject","array","predicate","find","TypeError","LARGE_ARRAY_SIZE","FUNC_ERROR_TEXT","HASH_UNDEFINED","UNORDERED_COMPARE_FLAG","PARTIAL_COMPARE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","NAN","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reTrim","reEscapeChar","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","typedArrayTags","freeParseInt","freeGlobal","freeSelf","root","Function","freeExports","exports","nodeType","freeModule","freeProcess","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arraySome","isHostObject","mapToArray","setToArray","uid","func","transform","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","exec","IE_PROTO","funcToString","hasOwnProperty","objectToString","reIsNative","RegExp","Symbol","propertyIsEnumerable","splice","nativeKeys","arg","nativeMax","getNative","Map","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","Hash","entries","clear","entry","ListCache","MapCache","SetCache","values","__data__","Stack","arrayLikeKeys","inherited","isArray","isArguments","n","iteratee","baseTimes","skipIndexes","isIndex","assocIndexOf","eq","baseGet","object","path","isKey","castPath","toKey","baseHasIn","baseIsEqual","other","customizer","bitmask","stack","isObject","isObjectLike","equalFunc","objIsArr","othIsArr","objTag","othTag","getTag","objIsObj","othIsObj","isSameTag","equalArrays","tag","byteOffset","message","convert","isPartial","stacked","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","othProps","skipCtor","objValue","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsNative","isFunction","baseIteratee","identity","srcValue","isStrictComparable","matchesStrictComparable","defaultValue","hasFunc","isLength","hasPath","hasIn","baseMatchesProperty","matchData","getMatchData","noCustomizer","baseIsMatch","baseMatches","basePropertyDeep","baseKeys","Ctor","stringToPath","arrLength","othLength","seen","arrValue","othIndex","has","getMapData","getValue","pop","cache","pairs","isSymbol","ctorString","memoize","baseToString","number","quote","resolver","memoized","apply","Cache","isArrayLike","isArrayLikeObject","baseUnary","fromIndex","remainder","isBinary","toNumber","sign","toFinite","fromRight","baseFindIndex","const","win","addEventListener","getDisplay","getAllDisplays","takeScreenshot","ref","sourceId","display","bounds","desktopCapturer","getSources","types","sources","displayIndex","findIndex","mandatory","chromeMediaSource","chromeMediaSourceId","maxWidth","maxHeight","minWidth","minHeight","getStream","then","getCanvas","availTop","drawFrame","getFrameImage","remote","require","ipcMain","BrowserWindow","ipc","ipcRenderer","pick","transparent","toolbar","setSimpleFullScreen","show","loadURL","cwd","webContents","on","send","pixels","parse","let","rgbBox","getElementById","innerHTML","backgroundColor","ipcMainHandler"],"mappings":"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"}